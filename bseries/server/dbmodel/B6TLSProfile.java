/*
 * $Id$
 */

package com.calix.bseries.server.dbmodel;

  //---------------------------------/
 //- Imported classes and packages -/
//---------------------------------/
//BEGIN IMPORTS
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.calix.ems.database.C7Database;
import com.calix.ems.database.DbTransaction;
import com.calix.ems.exception.EMSDatabaseException;
import com.calix.ems.exception.EMSException;
import com.calix.ems.query.EMSGetAllQuery;
import com.calix.ems.query.ICMSQuery;
import com.calix.system.common.log.Log;
//END IMPORTS
import com.calix.ems.util.TLVHelper;
import com.calix.system.common.protocol.tlv.TLV;
import com.calix.system.server.dbmodel.*;

/**
 * Class B6TLSProfile.
 * 
 * @version $Revision$ $Date$
 */
public class B6TLSProfile extends com.calix.system.server.dbmodel.CMSObject {


      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field m_AssociatedService
     */
    public Integer m_AssociatedService;

    /**
     * Field m_Description
     */
    public String m_Description;

    /**
     * Field m_DotPrority
     */
    public Integer m_DotPrority;

    /**
     * Field m_INPUTPolicyUnicastRateLimit
     */
    public String m_INPUTPolicyUnicastRateLimit;

    /**
     * Field m_InputServicePolicyName
     */
    public String m_InputServicePolicyName;

    /**
     * Field m_IsAutogenerated
     */
    public Integer m_IsAutogenerated;

    /**
     * Field m_MacLimit
     */
    public Integer m_MacLimit;

    /**
     * Field m_MaxPrority
     */
    public Integer m_MaxPrority;

    /**
     * Field m_Name
     */
    public com.calix.system.server.dbmodel.ICMSAid m_Name;

    /**
     * Field m_OUTputPolicyUnicastRateLimit
     */
    public String m_OUTputPolicyUnicastRateLimit;

    /**
     * Field m_Onttag
     */
    public String m_Onttag;

    /**
     * Field m_OutputServicePolicyName
     */
    public String m_OutputServicePolicyName;

    /**
     * Field m_ServiceDefName
     */
    public String m_ServiceDefName;

    /**
     * Field m_ServicePackage_TLS
     */
    public String m_ServicePackage_TLS;

    /**
     * Field m_ServiceType
     */
    public Integer m_ServiceType;

    /**
     * Field m_Syncstatus
     */
    public String m_Syncstatus;

    /**
     * Field m_VlanID
     */
    public Integer m_VlanID;

    /**
     * Field TYPE_NAME
     */
    public static String TYPE_NAME = "B6TLSProfile";

    /**
     * Field flowID
     */
    public static final int flowID = 1;


      //----------------/
     //- Constructors -/
    //----------------/

    public B6TLSProfile() {
        super();
    } //-- com.calix.bseries.server.dbmodel.B6TLSProfile()


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method copyFields
     * 
     * @param obj1
     */
    protected void copyFields(CMSObject obj1)
    {
        if( obj1 instanceof B6TLSProfile ) {
            super.copyFields(obj1);
            B6TLSProfile obj = (B6TLSProfile)obj1;
            setAssociatedService((Integer)Helper.copy(obj.getAssociatedService()));
            setDescription((String)Helper.copy(obj.getDescription()));
            setDotPrority((Integer)Helper.copy(obj.getDotPrority()));
            setINPUTPolicyUnicastRateLimit((String)Helper.copy(obj.getINPUTPolicyUnicastRateLimit()));
            setInputServicePolicyName((String)Helper.copy(obj.getInputServicePolicyName()));
            setIsAutogenerated((Integer)Helper.copy(obj.getIsAutogenerated()));
            setMacLimit((Integer)Helper.copy(obj.getMacLimit()));
            setMaxPrority((Integer)Helper.copy(obj.getMaxPrority()));
            setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
            setOUTputPolicyUnicastRateLimit((String)Helper.copy(obj.getOUTputPolicyUnicastRateLimit()));
            setOnttag((String)Helper.copy(obj.getOnttag()));
            setOutputServicePolicyName((String)Helper.copy(obj.getOutputServicePolicyName()));
            setServiceDefName((String)Helper.copy(obj.getServiceDefName()));
            setServicePackage_TLS((String)Helper.copy(obj.getServicePackage_TLS()));
            setServiceType((Integer)Helper.copy(obj.getServiceType()));
            setSyncstatus((String)Helper.copy(obj.getSyncstatus()));
            setVlanID((Integer)Helper.copy(obj.getVlanID()));
            setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void copyFields(CMSObject) 

    /**
     * Method getAssociatedService
     */
    public Integer getAssociatedService()
    {
        return this.m_AssociatedService;
    } //-- Integer getAssociatedService() 

    /**
     * Method getDescription
     */
    public String getDescription()
    {
        return this.m_Description;
    } //-- String getDescription() 

    /**
     * Method getDotPrority
     */
    public Integer getDotPrority()
    {
        return this.m_DotPrority;
    } //-- Integer getDotPrority() 

    /**
     * Method getINPUTPolicyUnicastRateLimit
     */
    public String getINPUTPolicyUnicastRateLimit()
    {
        return this.m_INPUTPolicyUnicastRateLimit;
    } //-- String getINPUTPolicyUnicastRateLimit() 

    /**
     * Method getIdentityValue
     */
    public com.calix.system.server.dbmodel.ICMSAid getIdentityValue()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getIdentityValue() 

    /**
     * Method getInputServicePolicyName
     */
    public String getInputServicePolicyName()
    {
        return this.m_InputServicePolicyName;
    } //-- String getInputServicePolicyName() 

    /**
     * Method getIsAutogenerated
     */
    public Integer getIsAutogenerated()
    {
        return this.m_IsAutogenerated;
    } //-- Integer getIsAutogenerated() 

    /**
     * Method getMacLimit
     */
    public Integer getMacLimit()
    {
        return this.m_MacLimit;
    } //-- Integer getMacLimit() 

    /**
     * Method getMaxPrority
     */
    public Integer getMaxPrority()
    {
        return this.m_MaxPrority;
    } //-- Integer getMaxPrority() 

    /**
     * Method getName
     */
    public com.calix.system.server.dbmodel.ICMSAid getName()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getName() 

    /**
     * Method getOUTputPolicyUnicastRateLimit
     */
    public String getOUTputPolicyUnicastRateLimit()
    {
        return this.m_OUTputPolicyUnicastRateLimit;
    } //-- String getOUTputPolicyUnicastRateLimit() 

    /**
     * Method getOnttag
     */
    public String getOnttag()
    {
        return this.m_Onttag;
    } //-- String getOnttag() 

    /**
     * Method getOutputServicePolicyName
     */
    public String getOutputServicePolicyName()
    {
        return this.m_OutputServicePolicyName;
    } //-- String getOutputServicePolicyName() 

    /**
     * Method getServiceDefName
     */
    public String getServiceDefName()
    {
        return this.m_ServiceDefName;
    } //-- String getServiceDefName() 

    /**
     * Method getServicePackage_TLS
     */
    public String getServicePackage_TLS()
    {
        return this.m_ServicePackage_TLS;
    } //-- String getServicePackage_TLS() 

    /**
     * Method getServiceType
     */
    public Integer getServiceType()
    {
        return this.m_ServiceType;
    } //-- Integer getServiceType() 

    /**
     * Method getSyncstatus
     */
    public String getSyncstatus()
    {
        return this.m_Syncstatus;
    } //-- String getSyncstatus() 

    /**
     * Method getTlvType
     */
    public int getTlvType()
    {
        return BseriesTlvConstants.B6TLSProfile;
    } //-- int getTlvType() 

    /**
     * Method getTypeName
     */
    public String getTypeName()
    {
        return TYPE_NAME;
    } //-- String getTypeName() 

    /**
     * Method getVlanID
     */
    public Integer getVlanID()
    {
        return this.m_VlanID;
    } //-- Integer getVlanID() 

    /**
     * Method populateAttributeFromTLV
     * 
     * @param tlv
     * @param from_version
     */
    public void populateAttributeFromTLV(TLV tlv, SwVersionNo from_version)
    {
        if (tlv == null)
            return;
        switch (tlv.getType()) {
            case 0x34B4:
                if (m_ServicePackage_TLS == null) {
                    m_ServicePackage_TLS = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B5:
                if (m_IsAutogenerated == null) {
                    m_IsAutogenerated = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B6:
                if (m_Description == null) {
                    m_Description = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B7:
                if (m_ServiceType == null) {
                    m_ServiceType = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B8:
                if (m_VlanID == null) {
                    m_VlanID = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B9:
                if (m_InputServicePolicyName == null) {
                    m_InputServicePolicyName = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BA:
                if (m_INPUTPolicyUnicastRateLimit == null) {
                    m_INPUTPolicyUnicastRateLimit = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BB:
                if (m_OutputServicePolicyName == null) {
                    m_OutputServicePolicyName = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BC:
                if (m_OUTputPolicyUnicastRateLimit == null) {
                    m_OUTputPolicyUnicastRateLimit = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BE:
                if (m_ServiceDefName == null) {
                    m_ServiceDefName = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BF:
                if (m_DotPrority == null) {
                    m_DotPrority = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34C0:
                if (m_MaxPrority == null) {
                    m_MaxPrority = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34C1:
                if (m_AssociatedService == null) {
                    m_AssociatedService = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34C2:
                if (m_MacLimit == null) {
                    m_MacLimit = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34C3:
                if (m_Onttag == null) {
                    m_Onttag = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x41BD:
                if (m_Syncstatus == null) {
                    m_Syncstatus = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
        }
        super.populateAttributeFromTLV(tlv, from_version);
    } //-- void populateAttributeFromTLV(TLV, SwVersionNo) 

    /**
     * Method populateTLVFromAttributes
     * 
     * @param tlv
     * @param to_version
     */
    public void populateTLVFromAttributes(TLV tlv, SwVersionNo to_version)
    {
        if (tlv == null)
            return;
        super.populateTLVFromAttributes(tlv, to_version);
        TLVHelper.addEmbeddedTLV(tlv, 0x34C1, m_AssociatedService);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B6, m_Description);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BF, m_DotPrority);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BA, m_INPUTPolicyUnicastRateLimit);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B9, m_InputServicePolicyName);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B5, m_IsAutogenerated);
        TLVHelper.addEmbeddedTLV(tlv, 0x34C2, m_MacLimit);
        TLVHelper.addEmbeddedTLV(tlv, 0x34C0, m_MaxPrority);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BC, m_OUTputPolicyUnicastRateLimit);
        TLVHelper.addEmbeddedTLV(tlv, 0x34C3, m_Onttag);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BB, m_OutputServicePolicyName);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BE, m_ServiceDefName);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B4, m_ServicePackage_TLS);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B7, m_ServiceType);
        TLVHelper.addEmbeddedTLV(tlv, 0x41BD, m_Syncstatus);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B8, m_VlanID);
    } //-- void populateTLVFromAttributes(TLV, SwVersionNo) 

    /**
     * Method setAssociatedService
     * 
     * @param AssociatedService
     */
    public void setAssociatedService(Integer AssociatedService)
    {
        this.m_AssociatedService = AssociatedService;
    } //-- void setAssociatedService(Integer) 

    /**
     * Method setDescription
     * 
     * @param Description
     */
    public void setDescription(String Description)
    {
        this.m_Description = Description;
    } //-- void setDescription(String) 

    /**
     * Method setDotPrority
     * 
     * @param DotPrority
     */
    public void setDotPrority(Integer DotPrority)
    {
        this.m_DotPrority = DotPrority;
    } //-- void setDotPrority(Integer) 

    /**
     * Method setINPUTPolicyUnicastRateLimit
     * 
     * @param INPUTPolicyUnicastRateLimit
     */
    public void setINPUTPolicyUnicastRateLimit(String INPUTPolicyUnicastRateLimit)
    {
        this.m_INPUTPolicyUnicastRateLimit = INPUTPolicyUnicastRateLimit;
    } //-- void setINPUTPolicyUnicastRateLimit(String) 

    /**
     * Method setIdentityValue
     * 
     * @param Name
     */
    public boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = (com.calix.system.server.dbmodel.ICMSAid)Name;
        return true;
    } //-- boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setInputServicePolicyName
     * 
     * @param InputServicePolicyName
     */
    public void setInputServicePolicyName(String InputServicePolicyName)
    {
        this.m_InputServicePolicyName = InputServicePolicyName;
    } //-- void setInputServicePolicyName(String) 

    /**
     * Method setIsAutogenerated
     * 
     * @param IsAutogenerated
     */
    public void setIsAutogenerated(Integer IsAutogenerated)
    {
        this.m_IsAutogenerated = IsAutogenerated;
    } //-- void setIsAutogenerated(Integer) 

    /**
     * Method setMacLimit
     * 
     * @param MacLimit
     */
    public void setMacLimit(Integer MacLimit)
    {
        this.m_MacLimit = MacLimit;
    } //-- void setMacLimit(Integer) 

    /**
     * Method setMaxPrority
     * 
     * @param MaxPrority
     */
    public void setMaxPrority(Integer MaxPrority)
    {
        this.m_MaxPrority = MaxPrority;
    } //-- void setMaxPrority(Integer) 

    /**
     * Method setName
     * 
     * @param Name
     */
    public void setName(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = Name;
    } //-- void setName(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setOUTputPolicyUnicastRateLimit
     * 
     * @param OUTputPolicyUnicastRateLimit
     */
    public void setOUTputPolicyUnicastRateLimit(String OUTputPolicyUnicastRateLimit)
    {
        this.m_OUTputPolicyUnicastRateLimit = OUTputPolicyUnicastRateLimit;
    } //-- void setOUTputPolicyUnicastRateLimit(String) 

    /**
     * Method setOnttag
     * 
     * @param Onttag
     */
    public void setOnttag(String Onttag)
    {
        this.m_Onttag = Onttag;
    } //-- void setOnttag(String) 

    /**
     * Method setOutputServicePolicyName
     * 
     * @param OutputServicePolicyName
     */
    public void setOutputServicePolicyName(String OutputServicePolicyName)
    {
        this.m_OutputServicePolicyName = OutputServicePolicyName;
    } //-- void setOutputServicePolicyName(String) 

    /**
     * Method setServiceDefName
     * 
     * @param ServiceDefName
     */
    public void setServiceDefName(String ServiceDefName)
    {
        this.m_ServiceDefName = ServiceDefName;
    } //-- void setServiceDefName(String) 

    /**
     * Method setServicePackage_TLS
     * 
     * @param ServicePackage_TLS
     */
    public void setServicePackage_TLS(String ServicePackage_TLS)
    {
        this.m_ServicePackage_TLS = ServicePackage_TLS;
    } //-- void setServicePackage_TLS(String) 

    /**
     * Method setServiceType
     * 
     * @param ServiceType
     */
    public void setServiceType(Integer ServiceType)
    {
        this.m_ServiceType = ServiceType;
    } //-- void setServiceType(Integer) 

    /**
     * Method setSyncstatus
     * 
     * @param Syncstatus
     */
    public void setSyncstatus(String Syncstatus)
    {
        this.m_Syncstatus = Syncstatus;
    } //-- void setSyncstatus(String) 

    /**
     * Method setTypeName
     * 
     * @param typeName
     */
    public boolean setTypeName(String typeName)
    {
        return false;
    } //-- boolean setTypeName(String) 

    /**
     * Method setVlanID
     * 
     * @param VlanID
     */
    public void setVlanID(Integer VlanID)
    {
        this.m_VlanID = VlanID;
    } //-- void setVlanID(Integer) 

    /**
     * Method updateFields
     * 
     * @param obj1
     */
    protected void updateFields(CMSObject obj1)
    {
        if( obj1 instanceof B6TLSProfile ) {
            super.updateFields(obj1);
            B6TLSProfile obj = (B6TLSProfile)obj1;
           if (obj.getAssociatedService() != null )
               setAssociatedService((Integer)Helper.copy(obj.getAssociatedService()));
           if (obj.getDescription() != null )
               setDescription((String)Helper.copy(obj.getDescription()));
           if (obj.getDotPrority() != null )
               setDotPrority((Integer)Helper.copy(obj.getDotPrority()));
           if (obj.getINPUTPolicyUnicastRateLimit() != null )
               setINPUTPolicyUnicastRateLimit((String)Helper.copy(obj.getINPUTPolicyUnicastRateLimit()));
           if (obj.getInputServicePolicyName() != null )
               setInputServicePolicyName((String)Helper.copy(obj.getInputServicePolicyName()));
           if (obj.getIsAutogenerated() != null )
               setIsAutogenerated((Integer)Helper.copy(obj.getIsAutogenerated()));
           if (obj.getMacLimit() != null )
               setMacLimit((Integer)Helper.copy(obj.getMacLimit()));
           if (obj.getMaxPrority() != null )
               setMaxPrority((Integer)Helper.copy(obj.getMaxPrority()));
           if (obj.getName() != null )
               setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
           if (obj.getOUTputPolicyUnicastRateLimit() != null )
               setOUTputPolicyUnicastRateLimit((String)Helper.copy(obj.getOUTputPolicyUnicastRateLimit()));
           if (obj.getOnttag() != null )
               setOnttag((String)Helper.copy(obj.getOnttag()));
           if (obj.getOutputServicePolicyName() != null )
               setOutputServicePolicyName((String)Helper.copy(obj.getOutputServicePolicyName()));
           if (obj.getServiceDefName() != null )
               setServiceDefName((String)Helper.copy(obj.getServiceDefName()));
           if (obj.getServicePackage_TLS() != null )
               setServicePackage_TLS((String)Helper.copy(obj.getServicePackage_TLS()));
           if (obj.getServiceType() != null )
               setServiceType((Integer)Helper.copy(obj.getServiceType()));
           if (obj.getSyncstatus() != null )
               setSyncstatus((String)Helper.copy(obj.getSyncstatus()));
           if (obj.getVlanID() != null )
               setVlanID((Integer)Helper.copy(obj.getVlanID()));
           if (obj.getIdentityValue() != null )
               setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void updateFields(CMSObject) 

//BEGIN CODE
    
    public void setInputPolicyUnicastRateLimit(Double InputPolicyUnicastRateLimit ){
    	if(InputPolicyUnicastRateLimit!= null)
    		this.m_INPUTPolicyUnicastRateLimit = String.valueOf(InputPolicyUnicastRateLimit);
    	else
    		this.m_INPUTPolicyUnicastRateLimit = null;
    }
    
    public void setOutputPolicyUnicastRateLimit(Double OutPolicyUnicastRateLimit){
    	if(OutPolicyUnicastRateLimit != null)
    		this.m_OUTputPolicyUnicastRateLimit = String.valueOf(OutPolicyUnicastRateLimit);
    	else
    		this.m_OUTputPolicyUnicastRateLimit = null;
    }
    
    
    public Double getInputPolicyUnicastRateLimit(){  	
    	if(this.m_INPUTPolicyUnicastRateLimit != null)
    		return Double.valueOf(this.m_INPUTPolicyUnicastRateLimit);
    	else
    		return (Double)null;
    }
    public Double getOutputPolicyUnicastRateLimit(){
    	if(this.m_OUTputPolicyUnicastRateLimit != null)
    		return Double.valueOf(this.m_OUTputPolicyUnicastRateLimit);
    	else
    		return null;
    }
    
	public void setconvertName(String convertName) {
		this.m_Name = new EMSAid(convertName);
	} // -- void setconvertName(String)

	public String getconvertName() {
		return this.m_Name.toString();
	}
	
	public Collection doQuery(DbTransaction tx, String filter)
			throws EMSException {
		if (Log.db().isDebugEnabled())
			Log.db().debug("Inside doQuery");
		ICMSQuery query = getDBQuery(this.getTypeName(), null);
		Collection coll = query.exec((Object) tx.getDatabase(), (Object) tx);
		if (Log.db().isDebugEnabled())
			Log.db().debug("Out of doQuery");
		return coll;
	}

	public CMSObject doLoad(DbTransaction tx) throws EMSException {
		C7Database db = C7Database.getInstance();
		CMSObject obj = null;
		try {
			db.beginTransaction();
			Collection resultList = db.executeQuery(this.getClass(), "name = '"
					+ this.getIdentityValue().toString() + "'", -1, -1);
			if (resultList != null && !resultList.isEmpty()) {
				Iterator itr = resultList.iterator();
				obj = (CMSObject) itr.next();
			}
			db.commitTransaction();
			} catch (Exception e) {
				e.printStackTrace();
				db.rollbackTransaction();
			}finally{
				db.close();
			}
		if (obj == null)
			throw new EMSDatabaseException(
					EMSDatabaseException._loadNonExistentFail_,
					"Object does not exist");
		else
			return obj;
	}

	public ICMSQuery getDBQuery(String type, String filter) {
		if (filter == null || filter.equals(""))
			return new EMSGetAllQuery(type);
		else {
			Log.meta().error("BaseEMSObject: filterQuery is not supported");
			return null;
		}
	}

	public boolean isIdentityValuePrimaryKey() {
		return true;
	}
	
//END CODE
}
