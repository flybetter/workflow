/*
 * $Id$
 */

package com.calix.bseries.server.dbmodel;

  //---------------------------------/
 //- Imported classes and packages -/
//BEGIN IMPORTS
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.calix.ems.database.C7Database;
import com.calix.ems.database.DbTransaction;
import com.calix.ems.exception.EMSDatabaseException;
import com.calix.ems.exception.EMSException;
import com.calix.ems.query.EMSGetAllQuery;
import com.calix.ems.query.ICMSQuery;
import com.calix.system.common.log.Log;
//END IMPORTS
//---------------------------------/
import com.calix.ems.util.TLVHelper;
import com.calix.system.common.protocol.tlv.TLV;
import com.calix.system.server.dbmodel.*;

/**
 * Class B6DSLProfile.
 * 
 * @version $Revision$ $Date$
 */
public class B6DSLProfile extends com.calix.system.server.dbmodel.CMSObject {


      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**





     * Field m_DSDownShiftSNR
     */
    public String m_DSDownShiftSNR;

    /**
     * Field m_DSMaxSNR
     */
    public String m_DSMaxSNR;

    /**
     * Field m_DSMinSNR
     */
    public String m_DSMinSNR;

    /**
     * Field m_DSTargetSNR
     */
    public String m_DSTargetSNR;

    /**
     * Field m_DSUpShiftSNR
     */
    public String m_DSUpShiftSNR;

    /**
     * Field m_Name
     */
    public com.calix.system.server.dbmodel.ICMSAid m_Name;

    /**
     * Field m_SRAAdminState
     */
    public Integer m_SRAAdminState;

    /**
     * Field m_USDownShiftSNR
     */
    public String m_USDownShiftSNR;

    /**
     * Field m_USMaxSNR
     */
    public String m_USMaxSNR;

    /**
     * Field m_USMinSNR
     */
    public String m_USMinSNR;

    /**
     * Field m_USTargetSNR
     */
    public String m_USTargetSNR;

    /**
     * Field m_USUpShiftSNR
     */
    public String m_USUpShiftSNR;

    /**
     * Field m_description
     */
    public String m_description;

    /**
     * Field m_downShiftSRAUpStream
     */
    public Integer m_downShiftSRAUpStream;

    /**
     * Field m_dsBitswap
     */
    public Integer m_dsBitswap;

    /**
     * Field m_dsDelay
     */
    public Integer m_dsDelay;

    /**
     * Field m_dsGinpETRmin
     */
    public Integer m_dsGinpETRmin;

    /**
     * Field m_dsGinpIatLthre
     */
    public Integer m_dsGinpIatLthre;

    /**
     * Field m_dsGinpIatRein
     */
    public Integer m_dsGinpIatRein;

    /**
     * Field m_dsGinpInpMin
     */
    public Integer m_dsGinpInpMin;

    /**
     * Field m_dsGinpInpMinRein
     */
    public Integer m_dsGinpInpMinRein;

    /**
     * Field m_dsGinpMaxDelay
     */
    public Integer m_dsGinpMaxDelay;

    /**
     * Field m_dsGinpMinDelay
     */
    public Integer m_dsGinpMinDelay;

    /**
     * Field m_dsGinpNDRmax
     */
    public Integer m_dsGinpNDRmax;

    /**
     * Field m_dsGinpShineratio
     */
    public Integer m_dsGinpShineratio;

    /**
     * Field m_dsGinpState
     */
    public Integer m_dsGinpState;

    /**
     * Field m_dsImpulseNoise
     */
    public Integer m_dsImpulseNoise;

    /**
     * Field m_dsMaxBitRate
     */
    public Integer m_dsMaxBitRate;

    /**
     * Field m_dsMinBitRate
     */
    public Integer m_dsMinBitRate;

    /**
     * Field m_isAutogenerated
     */
    public Integer m_isAutogenerated;

    /**
     * Field m_minDownShiftSRA
     */
    public Integer m_minDownShiftSRA;

    /**
     * Field m_minUpShiftSRA
     */
    public Integer m_minUpShiftSRA;

    /**
     * Field m_operatingMode
     */
    public Integer m_operatingMode;

    /**
     * Field m_phyReTransmission
     */
    public Integer m_phyReTransmission;

    /**
     * Field m_phyReTransmissionRS
     */
    public Integer m_phyReTransmissionRS;

    /**
     * Field m_phyReTransmissionRSUpStream
     */
    public Integer m_phyReTransmissionRSUpStream;

    /**
     * Field m_phyReTransmissionUpStream
     */
    public Integer m_phyReTransmissionUpStream;

    /**
     * Field m_reedSoloman
     */
    public Integer m_reedSoloman;

    /**
     * Field m_servicePackage_DSL
     */
    public String m_servicePackage_DSL;

    /**
     * Field m_ssettohalf
     */
    public Integer m_ssettohalf;

    /**
     * Field m_syncstatus
     */
    public String m_syncstatus;

    /**
     * Field m_trellisEncoding
     */
    public Integer m_trellisEncoding;

    /**
     * Field m_upShiftSRAUpStream
     */
    public Integer m_upShiftSRAUpStream;

    /**
     * Field m_upstreamSRA
     */
    public Integer m_upstreamSRA;

    /**
     * Field m_usBitswap
     */
    public Integer m_usBitswap;

    /**
     * Field m_usDelay
     */
    public Integer m_usDelay;

    /**
     * Field m_usGinpETRmin
     */
    public Integer m_usGinpETRmin;

    /**
     * Field m_usGinpIatLthre
     */
    public Integer m_usGinpIatLthre;

    /**
     * Field m_usGinpIatRein
     */
    public Integer m_usGinpIatRein;

    /**
     * Field m_usGinpInpMin
     */
    public Integer m_usGinpInpMin;

    /**
     * Field m_usGinpInpMinRein
     */
    public Integer m_usGinpInpMinRein;

    /**
     * Field m_usGinpMaxDelay
     */
    public Integer m_usGinpMaxDelay;

    /**
     * Field m_usGinpMinDelay
     */
    public Integer m_usGinpMinDelay;

    /**
     * Field m_usGinpNDRmax
     */
    public Integer m_usGinpNDRmax;

    /**
     * Field m_usGinpShineratio
     */
    public Integer m_usGinpShineratio;

    /**
     * Field m_usGinpState
     */
    public Integer m_usGinpState;

    /**
     * Field m_usImpulseNoise
     */
    public Integer m_usImpulseNoise;

    /**
     * Field m_usMaxBitRate
     */
    public Integer m_usMaxBitRate;

    /**
     * Field m_usMinBitRate
     */
    public Integer m_usMinBitRate;

    /**
     * Field m_vdsl2Profile
     */
    public Integer m_vdsl2Profile;

    /**
     * Field m_vdsl2US0Shape
     */
    public Integer m_vdsl2US0Shape;

    /**
     * Field TYPE_NAME
     */
    public static String TYPE_NAME = "B6DSLProfile";

    /**
     * Field flowID
     */
    public static final int flowID = 1;


      //----------------/
     //- Constructors -/
    //----------------/

    public B6DSLProfile() {
        super();
    } //-- com.calix.bseries.server.dbmodel.B6DSLProfile()


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method copyFields
     * 
     * @param obj1
     */
    protected void copyFields(CMSObject obj1)
    {
        if( obj1 instanceof B6DSLProfile ) {
            super.copyFields(obj1);
            B6DSLProfile obj = (B6DSLProfile)obj1;

            setDSDownShiftSNR((String)Helper.copy(obj.getDSDownShiftSNR()));
            setDSMaxSNR((String)Helper.copy(obj.getDSMaxSNR()));
            setDSMinSNR((String)Helper.copy(obj.getDSMinSNR()));
            setDSTargetSNR((String)Helper.copy(obj.getDSTargetSNR()));
            setDSUpShiftSNR((String)Helper.copy(obj.getDSUpShiftSNR()));
            setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
            setSRAAdminState((Integer)Helper.copy(obj.getSRAAdminState()));
            setUSDownShiftSNR((String)Helper.copy(obj.getUSDownShiftSNR()));
            setUSMaxSNR((String)Helper.copy(obj.getUSMaxSNR()));
            setUSMinSNR((String)Helper.copy(obj.getUSMinSNR()));
            setUSTargetSNR((String)Helper.copy(obj.getUSTargetSNR()));
            setUSUpShiftSNR((String)Helper.copy(obj.getUSUpShiftSNR()));
            setdescription((String)Helper.copy(obj.getdescription()));
            setdownShiftSRAUpStream((Integer)Helper.copy(obj.getdownShiftSRAUpStream()));
            setdsBitswap((Integer)Helper.copy(obj.getdsBitswap()));
            setdsDelay((Integer)Helper.copy(obj.getdsDelay()));
            setdsGinpETRmin((Integer)Helper.copy(obj.getdsGinpETRmin()));
            setdsGinpIatLthre((Integer)Helper.copy(obj.getdsGinpIatLthre()));
            setdsGinpIatRein((Integer)Helper.copy(obj.getdsGinpIatRein()));
            setdsGinpInpMin((Integer)Helper.copy(obj.getdsGinpInpMin()));
            setdsGinpInpMinRein((Integer)Helper.copy(obj.getdsGinpInpMinRein()));
            setdsGinpMaxDelay((Integer)Helper.copy(obj.getdsGinpMaxDelay()));
            setdsGinpMinDelay((Integer)Helper.copy(obj.getdsGinpMinDelay()));
            setdsGinpNDRmax((Integer)Helper.copy(obj.getdsGinpNDRmax()));
            setdsGinpShineratio((Integer)Helper.copy(obj.getdsGinpShineratio()));
            setdsGinpState((Integer)Helper.copy(obj.getdsGinpState()));
            setdsImpulseNoise((Integer)Helper.copy(obj.getdsImpulseNoise()));
            setdsMaxBitRate((Integer)Helper.copy(obj.getdsMaxBitRate()));
            setdsMinBitRate((Integer)Helper.copy(obj.getdsMinBitRate()));
            setisAutogenerated((Integer)Helper.copy(obj.getisAutogenerated()));
            setminDownShiftSRA((Integer)Helper.copy(obj.getminDownShiftSRA()));
            setminUpShiftSRA((Integer)Helper.copy(obj.getminUpShiftSRA()));
            setoperatingMode((Integer)Helper.copy(obj.getoperatingMode()));
            setphyReTransmission((Integer)Helper.copy(obj.getphyReTransmission()));
            setphyReTransmissionRS((Integer)Helper.copy(obj.getphyReTransmissionRS()));
            setphyReTransmissionRSUpStream((Integer)Helper.copy(obj.getphyReTransmissionRSUpStream()));
            setphyReTransmissionUpStream((Integer)Helper.copy(obj.getphyReTransmissionUpStream()));
            setreedSoloman((Integer)Helper.copy(obj.getreedSoloman()));
            setservicePackage_DSL((String)Helper.copy(obj.getservicePackage_DSL()));
            setssettohalf((Integer)Helper.copy(obj.getssettohalf()));
            setsyncstatus((String)Helper.copy(obj.getsyncstatus()));
            settrellisEncoding((Integer)Helper.copy(obj.gettrellisEncoding()));
            setupShiftSRAUpStream((Integer)Helper.copy(obj.getupShiftSRAUpStream()));
            setupstreamSRA((Integer)Helper.copy(obj.getupstreamSRA()));
            setusBitswap((Integer)Helper.copy(obj.getusBitswap()));
            setusDelay((Integer)Helper.copy(obj.getusDelay()));
            setusGinpETRmin((Integer)Helper.copy(obj.getusGinpETRmin()));
            setusGinpIatLthre((Integer)Helper.copy(obj.getusGinpIatLthre()));
            setusGinpIatRein((Integer)Helper.copy(obj.getusGinpIatRein()));
            setusGinpInpMin((Integer)Helper.copy(obj.getusGinpInpMin()));
            setusGinpInpMinRein((Integer)Helper.copy(obj.getusGinpInpMinRein()));
            setusGinpMaxDelay((Integer)Helper.copy(obj.getusGinpMaxDelay()));
            setusGinpMinDelay((Integer)Helper.copy(obj.getusGinpMinDelay()));
            setusGinpNDRmax((Integer)Helper.copy(obj.getusGinpNDRmax()));
            setusGinpShineratio((Integer)Helper.copy(obj.getusGinpShineratio()));
            setusGinpState((Integer)Helper.copy(obj.getusGinpState()));
            setusImpulseNoise((Integer)Helper.copy(obj.getusImpulseNoise()));
            setusMaxBitRate((Integer)Helper.copy(obj.getusMaxBitRate()));
            setusMinBitRate((Integer)Helper.copy(obj.getusMinBitRate()));
            setvdsl2Profile((Integer)Helper.copy(obj.getvdsl2Profile()));
            setvdsl2US0Shape((Integer)Helper.copy(obj.getvdsl2US0Shape()));
            setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void copyFields(CMSObject) 

    /**








     * Method getDSDownShiftSNR
     */
    public String getDSDownShiftSNR()
    {
        return this.m_DSDownShiftSNR;
    } //-- String getDSDownShiftSNR() 

    /**
     * Method getDSMaxSNR
     */
    public String getDSMaxSNR()
    {
        return this.m_DSMaxSNR;
    } //-- String getDSMaxSNR() 

    /**
     * Method getDSMinSNR
     */
    public String getDSMinSNR()
    {
        return this.m_DSMinSNR;
    } //-- String getDSMinSNR() 

    /**
     * Method getDSTargetSNR
     */
    public String getDSTargetSNR()
    {
        return this.m_DSTargetSNR;
    } //-- String getDSTargetSNR() 

    /**
     * Method getDSUpShiftSNR
     */
    public String getDSUpShiftSNR()
    {
        return this.m_DSUpShiftSNR;
    } //-- String getDSUpShiftSNR() 

    /**
     * Method getIdentityValue
     */
    public com.calix.system.server.dbmodel.ICMSAid getIdentityValue()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getIdentityValue() 

    /**
     * Method getName
     */
    public com.calix.system.server.dbmodel.ICMSAid getName()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getName() 

    /**
     * Method getSRAAdminState
     */
    public Integer getSRAAdminState()
    {
        return this.m_SRAAdminState;
    } //-- Integer getSRAAdminState() 

    /**
     * Method getTlvType
     */
    public int getTlvType()
    {
        return BseriesTlvConstants.B6DSLProfile;
    } //-- int getTlvType() 

    /**
     * Method getTypeName
     */
    public String getTypeName()
    {
        return TYPE_NAME;
    } //-- String getTypeName() 

    /**
     * Method getUSDownShiftSNR
     */
    public String getUSDownShiftSNR()
    {
        return this.m_USDownShiftSNR;
    } //-- String getUSDownShiftSNR() 

    /**
     * Method getUSMaxSNR
     */
    public String getUSMaxSNR()
    {
        return this.m_USMaxSNR;
    } //-- String getUSMaxSNR() 

    /**
     * Method getUSMinSNR
     */
    public String getUSMinSNR()
    {
        return this.m_USMinSNR;
    } //-- String getUSMinSNR() 

    /**
     * Method getUSTargetSNR
     */
    public String getUSTargetSNR()
    {
        return this.m_USTargetSNR;
    } //-- String getUSTargetSNR() 

    /**
     * Method getUSUpShiftSNR
     */
    public String getUSUpShiftSNR()
    {
        return this.m_USUpShiftSNR;
    } //-- String getUSUpShiftSNR() 

    /**
     * Method getdescription
     */
    public String getdescription()
    {
        return this.m_description;
    } //-- String getdescription() 

    /**
     * Method getdownShiftSRAUpStream
     */
    public Integer getdownShiftSRAUpStream()
    {
        return this.m_downShiftSRAUpStream;
    } //-- Integer getdownShiftSRAUpStream() 

    /**
     * Method getdsBitswap
     */
    public Integer getdsBitswap()
    {
        return this.m_dsBitswap;
    } //-- Integer getdsBitswap() 

    /**
     * Method getdsDelay
     */
    public Integer getdsDelay()
    {
        return this.m_dsDelay;
    } //-- Integer getdsDelay() 

    /**
     * Method getdsGinpETRmin
     */
    public Integer getdsGinpETRmin()
    {
        return this.m_dsGinpETRmin;
    } //-- Integer getdsGinpETRmin() 

    /**
     * Method getdsGinpIatLthre
     */
    public Integer getdsGinpIatLthre()
    {
        return this.m_dsGinpIatLthre;
    } //-- Integer getdsGinpIatLthre() 

    /**
     * Method getdsGinpIatRein
     */
    public Integer getdsGinpIatRein()
    {
        return this.m_dsGinpIatRein;
    } //-- Integer getdsGinpIatRein() 

    /**
     * Method getdsGinpInpMin
     */
    public Integer getdsGinpInpMin()
    {
        return this.m_dsGinpInpMin;
    } //-- Integer getdsGinpInpMin() 

    /**
     * Method getdsGinpInpMinRein
     */
    public Integer getdsGinpInpMinRein()
    {
        return this.m_dsGinpInpMinRein;
    } //-- Integer getdsGinpInpMinRein() 

    /**
     * Method getdsGinpMaxDelay
     */
    public Integer getdsGinpMaxDelay()
    {
        return this.m_dsGinpMaxDelay;
    } //-- Integer getdsGinpMaxDelay() 

    /**
     * Method getdsGinpMinDelay
     */
    public Integer getdsGinpMinDelay()
    {
        return this.m_dsGinpMinDelay;
    } //-- Integer getdsGinpMinDelay() 

    /**
     * Method getdsGinpNDRmax
     */
    public Integer getdsGinpNDRmax()
    {
        return this.m_dsGinpNDRmax;
    } //-- Integer getdsGinpNDRmax() 

    /**
     * Method getdsGinpShineratio
     */
    public Integer getdsGinpShineratio()
    {
        return this.m_dsGinpShineratio;
    } //-- Integer getdsGinpShineratio() 

    /**
     * Method getdsGinpState
     */
    public Integer getdsGinpState()
    {
        return this.m_dsGinpState;
    } //-- Integer getdsGinpState() 

    /**
     * Method getdsImpulseNoise
     */
    public Integer getdsImpulseNoise()
    {
        return this.m_dsImpulseNoise;
    } //-- Integer getdsImpulseNoise() 

    /**
     * Method getdsMaxBitRate
     */
    public Integer getdsMaxBitRate()
    {
        return this.m_dsMaxBitRate;
    } //-- Integer getdsMaxBitRate() 

    /**
     * Method getdsMinBitRate
     */
    public Integer getdsMinBitRate()
    {
        return this.m_dsMinBitRate;
    } //-- Integer getdsMinBitRate() 

    /**
     * Method getisAutogenerated
     */
    public Integer getisAutogenerated()
    {
        return this.m_isAutogenerated;
    } //-- Integer getisAutogenerated() 

    /**
     * Method getminDownShiftSRA
     */
    public Integer getminDownShiftSRA()
    {
        return this.m_minDownShiftSRA;
    } //-- Integer getminDownShiftSRA() 

    /**
     * Method getminUpShiftSRA
     */
    public Integer getminUpShiftSRA()
    {
        return this.m_minUpShiftSRA;
    } //-- Integer getminUpShiftSRA() 

    /**
     * Method getoperatingMode
     */
    public Integer getoperatingMode()
    {
        return this.m_operatingMode;
    } //-- Integer getoperatingMode() 

    /**
     * Method getphyReTransmission
     */
    public Integer getphyReTransmission()
    {
        return this.m_phyReTransmission;
    } //-- Integer getphyReTransmission() 

    /**
     * Method getphyReTransmissionRS
     */
    public Integer getphyReTransmissionRS()
    {
        return this.m_phyReTransmissionRS;
    } //-- Integer getphyReTransmissionRS() 

    /**
     * Method getphyReTransmissionRSUpStream
     */
    public Integer getphyReTransmissionRSUpStream()
    {
        return this.m_phyReTransmissionRSUpStream;
    } //-- Integer getphyReTransmissionRSUpStream() 

    /**
     * Method getphyReTransmissionUpStream
     */
    public Integer getphyReTransmissionUpStream()
    {
        return this.m_phyReTransmissionUpStream;
    } //-- Integer getphyReTransmissionUpStream() 

    /**
     * Method getreedSoloman
     */
    public Integer getreedSoloman()
    {
        return this.m_reedSoloman;
    } //-- Integer getreedSoloman() 

    /**
     * Method getservicePackage_DSL
     */
    public String getservicePackage_DSL()
    {
        return this.m_servicePackage_DSL;
    } //-- String getservicePackage_DSL() 

    /**
     * Method getssettohalf
     */
    public Integer getssettohalf()
    {
        return this.m_ssettohalf;
    } //-- Integer getssettohalf() 

    /**
     * Method getsyncstatus
     */
    public String getsyncstatus()
    {
        return this.m_syncstatus;
    } //-- String getsyncstatus() 

    /**
     * Method gettrellisEncoding
     */
    public Integer gettrellisEncoding()
    {
        return this.m_trellisEncoding;
    } //-- Integer gettrellisEncoding() 

    /**
     * Method getupShiftSRAUpStream
     */
    public Integer getupShiftSRAUpStream()
    {
        return this.m_upShiftSRAUpStream;
    } //-- Integer getupShiftSRAUpStream() 

    /**
     * Method getupstreamSRA
     */
    public Integer getupstreamSRA()
    {
        return this.m_upstreamSRA;
    } //-- Integer getupstreamSRA() 

    /**
     * Method getusBitswap
     */
    public Integer getusBitswap()
    {
        return this.m_usBitswap;
    } //-- Integer getusBitswap() 

    /**
     * Method getusDelay
     */
    public Integer getusDelay()
    {
        return this.m_usDelay;
    } //-- Integer getusDelay() 

    /**
     * Method getusGinpETRmin
     */
    public Integer getusGinpETRmin()
    {
        return this.m_usGinpETRmin;
    } //-- Integer getusGinpETRmin() 

    /**
     * Method getusGinpIatLthre
     */
    public Integer getusGinpIatLthre()
    {
        return this.m_usGinpIatLthre;
    } //-- Integer getusGinpIatLthre() 

    /**
     * Method getusGinpIatRein
     */
    public Integer getusGinpIatRein()
    {
        return this.m_usGinpIatRein;
    } //-- Integer getusGinpIatRein() 

    /**
     * Method getusGinpInpMin
     */
    public Integer getusGinpInpMin()
    {
        return this.m_usGinpInpMin;
    } //-- Integer getusGinpInpMin() 

    /**
     * Method getusGinpInpMinRein
     */
    public Integer getusGinpInpMinRein()
    {
        return this.m_usGinpInpMinRein;
    } //-- Integer getusGinpInpMinRein() 

    /**
     * Method getusGinpMaxDelay
     */
    public Integer getusGinpMaxDelay()
    {
        return this.m_usGinpMaxDelay;
    } //-- Integer getusGinpMaxDelay() 

    /**
     * Method getusGinpMinDelay
     */
    public Integer getusGinpMinDelay()
    {
        return this.m_usGinpMinDelay;
    } //-- Integer getusGinpMinDelay() 

    /**
     * Method getusGinpNDRmax
     */
    public Integer getusGinpNDRmax()
    {
        return this.m_usGinpNDRmax;
    } //-- Integer getusGinpNDRmax() 

    /**
     * Method getusGinpShineratio
     */
    public Integer getusGinpShineratio()
    {
        return this.m_usGinpShineratio;
    } //-- Integer getusGinpShineratio() 

    /**
     * Method getusGinpState
     */
    public Integer getusGinpState()
    {
        return this.m_usGinpState;
    } //-- Integer getusGinpState() 

    /**
     * Method getusImpulseNoise
     */
    public Integer getusImpulseNoise()
    {
        return this.m_usImpulseNoise;
    } //-- Integer getusImpulseNoise() 

    /**
     * Method getusMaxBitRate
     */
    public Integer getusMaxBitRate()
    {
        return this.m_usMaxBitRate;
    } //-- Integer getusMaxBitRate() 

    /**
     * Method getusMinBitRate
     */
    public Integer getusMinBitRate()
    {
        return this.m_usMinBitRate;
    } //-- Integer getusMinBitRate() 

    /**
     * Method getvdsl2Profile
     */
    public Integer getvdsl2Profile()
    {
        return this.m_vdsl2Profile;
    } //-- Integer getvdsl2Profile() 

    /**
     * Method getvdsl2US0Shape
     */
    public Integer getvdsl2US0Shape()
    {
        return this.m_vdsl2US0Shape;
    } //-- Integer getvdsl2US0Shape() 

    /**
     * Method populateAttributeFromTLV
     * 
     * @param tlv
     * @param from_version
     */
    public void populateAttributeFromTLV(TLV tlv, SwVersionNo from_version)
    {
        if (tlv == null)
            return;
        switch (tlv.getType()) {
            case 0x3481:
                if (m_dsImpulseNoise == null) {
                    m_dsImpulseNoise = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3483:
                if (m_trellisEncoding == null) {
                    m_trellisEncoding = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3484:
                if (m_reedSoloman == null) {
                    m_reedSoloman = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3485:
                if (m_USMinSNR == null) {
                    m_USMinSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3486:
                if (m_operatingMode == null) {
                    m_operatingMode = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3487:
                if (m_USDownShiftSNR == null) {
                    m_USDownShiftSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3488:
                if (m_dsMaxBitRate == null) {
                    m_dsMaxBitRate = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3489:
                if (m_DSUpShiftSNR == null) {
                    m_DSUpShiftSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348A:
                if (m_dsMinBitRate == null) {
                    m_dsMinBitRate = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348B:
                if (m_phyReTransmission == null) {
                    m_phyReTransmission = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348C:
                if (m_phyReTransmissionRS == null) {
                    m_phyReTransmissionRS = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348D:
                if (m_usDelay == null) {
                    m_usDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348E:
                if (m_dsDelay == null) {
                    m_dsDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x348F:
                if (m_usBitswap == null) {
                    m_usBitswap = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3490:
                if (m_DSDownShiftSNR == null) {
                    m_DSDownShiftSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3491:
                if (m_usMaxBitRate == null) {
                    m_usMaxBitRate = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3492:
                if (m_USUpShiftSNR == null) {
                    m_USUpShiftSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3493:
                if (m_usMinBitRate == null) {
                    m_usMinBitRate = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3494:
                if (m_USTargetSNR == null) {
                    m_USTargetSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3495:
                if (m_usImpulseNoise == null) {
                    m_usImpulseNoise = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3496:
                if (m_DSMaxSNR == null) {
                    m_DSMaxSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3497:
                if (m_dsBitswap == null) {
                    m_dsBitswap = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3498:
                if (m_servicePackage_DSL == null) {
                    m_servicePackage_DSL = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3499:
                if (m_isAutogenerated == null) {
                    m_isAutogenerated = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349A:
                if (m_USMaxSNR == null) {
                    m_USMaxSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349B:
                if (m_minDownShiftSRA == null) {
                    m_minDownShiftSRA = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349C:
                if (m_DSTargetSNR == null) {
                    m_DSTargetSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349D:
                if (m_SRAAdminState == null) {
                    m_SRAAdminState = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349E:
                if (m_description == null) {

                    m_description = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x349F:
                if (m_ssettohalf == null) {
                    m_ssettohalf = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A0:
                if (m_DSMinSNR == null) {
                    m_DSMinSNR = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A1:
                if (m_phyReTransmissionUpStream == null) {
                    m_phyReTransmissionUpStream = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A2:
                if (m_syncstatus == null) {
                    m_syncstatus = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A3:
                if (m_phyReTransmissionRSUpStream == null) {
                    m_phyReTransmissionRSUpStream = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A4:
                if (m_downShiftSRAUpStream == null) {
                    m_downShiftSRAUpStream = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A5:
                if (m_upShiftSRAUpStream == null) {
                    m_upShiftSRAUpStream = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A6:
                if (m_upstreamSRA == null) {
                    m_upstreamSRA = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A7:
                if (m_vdsl2Profile == null) {
                    m_vdsl2Profile = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A8:
                if (m_vdsl2US0Shape == null) {
                    m_vdsl2US0Shape = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34A9:
                if (m_usGinpState == null) {
                    m_usGinpState = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AA:
                if (m_dsGinpState == null) {
                    m_dsGinpState = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AB:
                if (m_usGinpETRmin == null) {
                    m_usGinpETRmin = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AC:
                if (m_dsGinpETRmin == null) {
                    m_dsGinpETRmin = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AD:
                if (m_usGinpNDRmax == null) {
                    m_usGinpNDRmax = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AE:
                if (m_dsGinpNDRmax == null) {
                    m_dsGinpNDRmax = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34AF:
                if (m_usGinpMaxDelay == null) {
                    m_usGinpMaxDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B0:
                if (m_dsGinpMaxDelay == null) {
                    m_dsGinpMaxDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B1:
                if (m_usGinpMinDelay == null) {
                    m_usGinpMinDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B2:
                if (m_dsGinpMinDelay == null) {
                    m_dsGinpMinDelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B3:
                if (m_usGinpInpMin == null) {
                    m_usGinpInpMin = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B4:
                if (m_dsGinpInpMin == null) {
                    m_dsGinpInpMin = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B5:
                if (m_usGinpShineratio == null) {
                    m_usGinpShineratio = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B6:
                if (m_dsGinpShineratio == null) {
                    m_dsGinpShineratio = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B7:
                if (m_usGinpInpMinRein == null) {
                    m_usGinpInpMinRein = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B8:
                if (m_dsGinpInpMinRein == null) {
                    m_dsGinpInpMinRein = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34B9:
                if (m_usGinpIatRein == null) {
                    m_usGinpIatRein = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BA:
                if (m_dsGinpIatRein == null) {
                    m_dsGinpIatRein = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BB:
                if (m_usGinpIatLthre == null) {
                    m_usGinpIatLthre = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x34BC:
                if (m_dsGinpIatLthre == null) {
                    m_dsGinpIatLthre = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3E82:
                if (m_minUpShiftSRA == null) {
                    m_minUpShiftSRA = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
        }
        super.populateAttributeFromTLV(tlv, from_version);
    } //-- void populateAttributeFromTLV(TLV, SwVersionNo) 

    /**
     * Method populateTLVFromAttributes
     * 
     * @param tlv
     * @param to_version
     */
    public void populateTLVFromAttributes(TLV tlv, SwVersionNo to_version)
    {
        if (tlv == null)
            return;
        super.populateTLVFromAttributes(tlv, to_version);

        TLVHelper.addEmbeddedTLV(tlv, 0x3490, m_DSDownShiftSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x3496, m_DSMaxSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A0, m_DSMinSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x349C, m_DSTargetSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x3489, m_DSUpShiftSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x349D, m_SRAAdminState);
        TLVHelper.addEmbeddedTLV(tlv, 0x3487, m_USDownShiftSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x349A, m_USMaxSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x3485, m_USMinSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x3494, m_USTargetSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x3492, m_USUpShiftSNR);
        TLVHelper.addEmbeddedTLV(tlv, 0x349E, m_description);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A4, m_downShiftSRAUpStream);
        TLVHelper.addEmbeddedTLV(tlv, 0x3497, m_dsBitswap);
        TLVHelper.addEmbeddedTLV(tlv, 0x348E, m_dsDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AC, m_dsGinpETRmin);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BC, m_dsGinpIatLthre);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BA, m_dsGinpIatRein);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B4, m_dsGinpInpMin);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B8, m_dsGinpInpMinRein);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B0, m_dsGinpMaxDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B2, m_dsGinpMinDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AE, m_dsGinpNDRmax);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B6, m_dsGinpShineratio);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AA, m_dsGinpState);
        TLVHelper.addEmbeddedTLV(tlv, 0x3481, m_dsImpulseNoise);
        TLVHelper.addEmbeddedTLV(tlv, 0x3488, m_dsMaxBitRate);
        TLVHelper.addEmbeddedTLV(tlv, 0x348A, m_dsMinBitRate);
        TLVHelper.addEmbeddedTLV(tlv, 0x3499, m_isAutogenerated);
        TLVHelper.addEmbeddedTLV(tlv, 0x349B, m_minDownShiftSRA);
        TLVHelper.addEmbeddedTLV(tlv, 0x3E82, m_minUpShiftSRA);
        TLVHelper.addEmbeddedTLV(tlv, 0x3486, m_operatingMode);
        TLVHelper.addEmbeddedTLV(tlv, 0x348B, m_phyReTransmission);
        TLVHelper.addEmbeddedTLV(tlv, 0x348C, m_phyReTransmissionRS);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A3, m_phyReTransmissionRSUpStream);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A1, m_phyReTransmissionUpStream);
        TLVHelper.addEmbeddedTLV(tlv, 0x3484, m_reedSoloman);
        TLVHelper.addEmbeddedTLV(tlv, 0x3498, m_servicePackage_DSL);
        TLVHelper.addEmbeddedTLV(tlv, 0x349F, m_ssettohalf);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A2, m_syncstatus);
        TLVHelper.addEmbeddedTLV(tlv, 0x3483, m_trellisEncoding);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A5, m_upShiftSRAUpStream);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A6, m_upstreamSRA);
        TLVHelper.addEmbeddedTLV(tlv, 0x348F, m_usBitswap);
        TLVHelper.addEmbeddedTLV(tlv, 0x348D, m_usDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AB, m_usGinpETRmin);
        TLVHelper.addEmbeddedTLV(tlv, 0x34BB, m_usGinpIatLthre);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B9, m_usGinpIatRein);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B3, m_usGinpInpMin);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B7, m_usGinpInpMinRein);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AF, m_usGinpMaxDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B1, m_usGinpMinDelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x34AD, m_usGinpNDRmax);
        TLVHelper.addEmbeddedTLV(tlv, 0x34B5, m_usGinpShineratio);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A9, m_usGinpState);
        TLVHelper.addEmbeddedTLV(tlv, 0x3495, m_usImpulseNoise);
        TLVHelper.addEmbeddedTLV(tlv, 0x3491, m_usMaxBitRate);
        TLVHelper.addEmbeddedTLV(tlv, 0x3493, m_usMinBitRate);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A7, m_vdsl2Profile);
        TLVHelper.addEmbeddedTLV(tlv, 0x34A8, m_vdsl2US0Shape);
    } //-- void populateTLVFromAttributes(TLV, SwVersionNo) 

    /**










     * Method setDSDownShiftSNR
     * 
     * @param DSDownShiftSNR
     */
    public void setDSDownShiftSNR(String DSDownShiftSNR)
    {
        this.m_DSDownShiftSNR = DSDownShiftSNR;
    } //-- void setDSDownShiftSNR(String) 

    /**
     * Method setDSMaxSNR
     * 
     * @param DSMaxSNR
     */
    public void setDSMaxSNR(String DSMaxSNR)
    {
        this.m_DSMaxSNR = DSMaxSNR;
    } //-- void setDSMaxSNR(String) 

    /**
     * Method setDSMinSNR
     * 
     * @param DSMinSNR
     */
    public void setDSMinSNR(String DSMinSNR)
    {
        this.m_DSMinSNR = DSMinSNR;
    } //-- void setDSMinSNR(String) 

    /**
     * Method setDSTargetSNR
     * 
     * @param DSTargetSNR
     */
    public void setDSTargetSNR(String DSTargetSNR)
    {
        this.m_DSTargetSNR = DSTargetSNR;
    } //-- void setDSTargetSNR(String) 

    /**
     * Method setDSUpShiftSNR
     * 
     * @param DSUpShiftSNR
     */
    public void setDSUpShiftSNR(String DSUpShiftSNR)
    {
        this.m_DSUpShiftSNR = DSUpShiftSNR;
    } //-- void setDSUpShiftSNR(String) 

    /**
     * Method setIdentityValue
     * 
     * @param Name
     */
    public boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = (com.calix.system.server.dbmodel.ICMSAid)Name;
        return true;
    } //-- boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setName
     * 
     * @param Name
     */
    public void setName(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = Name;
    } //-- void setName(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setSRAAdminState
     * 
     * @param SRAAdminState
     */
    public void setSRAAdminState(Integer SRAAdminState)
    {
        this.m_SRAAdminState = SRAAdminState;
    } //-- void setSRAAdminState(Integer) 

    /**
     * Method setTypeName
     * 
     * @param typeName
     */
    public boolean setTypeName(String typeName)
    {
        return false;
    } //-- boolean setTypeName(String) 

    /**
     * Method setUSDownShiftSNR
     * 
     * @param USDownShiftSNR
     */
    public void setUSDownShiftSNR(String USDownShiftSNR)
    {
        this.m_USDownShiftSNR = USDownShiftSNR;
    } //-- void setUSDownShiftSNR(String) 

    /**
     * Method setUSMaxSNR
     * 
     * @param USMaxSNR
     */
    public void setUSMaxSNR(String USMaxSNR)
    {
        this.m_USMaxSNR = USMaxSNR;
    } //-- void setUSMaxSNR(String) 

    /**
     * Method setUSMinSNR
     * 
     * @param USMinSNR
     */
    public void setUSMinSNR(String USMinSNR)
    {
        this.m_USMinSNR = USMinSNR;
    } //-- void setUSMinSNR(String) 

    /**
     * Method setUSTargetSNR
     * 
     * @param USTargetSNR
     */
    public void setUSTargetSNR(String USTargetSNR)
    {
        this.m_USTargetSNR = USTargetSNR;
    } //-- void setUSTargetSNR(String) 

    /**
     * Method setUSUpShiftSNR
     * 
     * @param USUpShiftSNR
     */
    public void setUSUpShiftSNR(String USUpShiftSNR)
    {
        this.m_USUpShiftSNR = USUpShiftSNR;
    } //-- void setUSUpShiftSNR(String) 

    /**
     * Method setdescription
     * 
     * @param description
     */
    public void setdescription(String description)
    {
        this.m_description = description;
    } //-- void setdescription(String) 

    /**
     * Method setdownShiftSRAUpStream
     * 
     * @param downShiftSRAUpStream
     */
    public void setdownShiftSRAUpStream(Integer downShiftSRAUpStream)
    {
        this.m_downShiftSRAUpStream = downShiftSRAUpStream;
    } //-- void setdownShiftSRAUpStream(Integer) 

    /**
     * Method setdsBitswap
     * 
     * @param dsBitswap
     */
    public void setdsBitswap(Integer dsBitswap)
    {
        this.m_dsBitswap = dsBitswap;
    } //-- void setdsBitswap(Integer) 

    /**
     * Method setdsDelay
     * 
     * @param dsDelay
     */
    public void setdsDelay(Integer dsDelay)
    {
        this.m_dsDelay = dsDelay;
    } //-- void setdsDelay(Integer) 

    /**
     * Method setdsGinpETRmin
     * 
     * @param dsGinpETRmin
     */
    public void setdsGinpETRmin(Integer dsGinpETRmin)
    {
        this.m_dsGinpETRmin = dsGinpETRmin;
    } //-- void setdsGinpETRmin(Integer) 

    /**
     * Method setdsGinpIatLthre
     * 
     * @param dsGinpIatLthre
     */
    public void setdsGinpIatLthre(Integer dsGinpIatLthre)
    {
        this.m_dsGinpIatLthre = dsGinpIatLthre;
    } //-- void setdsGinpIatLthre(Integer) 

    /**
     * Method setdsGinpIatRein
     * 
     * @param dsGinpIatRein
     */
    public void setdsGinpIatRein(Integer dsGinpIatRein)
    {
        this.m_dsGinpIatRein = dsGinpIatRein;
    } //-- void setdsGinpIatRein(Integer) 

    /**
     * Method setdsGinpInpMin
     * 
     * @param dsGinpInpMin
     */
    public void setdsGinpInpMin(Integer dsGinpInpMin)
    {
        this.m_dsGinpInpMin = dsGinpInpMin;
    } //-- void setdsGinpInpMin(Integer) 

    /**
     * Method setdsGinpInpMinRein
     * 
     * @param dsGinpInpMinRein
     */
    public void setdsGinpInpMinRein(Integer dsGinpInpMinRein)
    {
        this.m_dsGinpInpMinRein = dsGinpInpMinRein;
    } //-- void setdsGinpInpMinRein(Integer) 

    /**
     * Method setdsGinpMaxDelay
     * 
     * @param dsGinpMaxDelay
     */
    public void setdsGinpMaxDelay(Integer dsGinpMaxDelay)
    {
        this.m_dsGinpMaxDelay = dsGinpMaxDelay;
    } //-- void setdsGinpMaxDelay(Integer) 

    /**
     * Method setdsGinpMinDelay
     * 
     * @param dsGinpMinDelay
     */
    public void setdsGinpMinDelay(Integer dsGinpMinDelay)
    {
        this.m_dsGinpMinDelay = dsGinpMinDelay;
    } //-- void setdsGinpMinDelay(Integer) 

    /**
     * Method setdsGinpNDRmax
     * 
     * @param dsGinpNDRmax
     */
    public void setdsGinpNDRmax(Integer dsGinpNDRmax)
    {
        this.m_dsGinpNDRmax = dsGinpNDRmax;
    } //-- void setdsGinpNDRmax(Integer) 

    /**
     * Method setdsGinpShineratio
     * 
     * @param dsGinpShineratio
     */
    public void setdsGinpShineratio(Integer dsGinpShineratio)
    {
        this.m_dsGinpShineratio = dsGinpShineratio;
    } //-- void setdsGinpShineratio(Integer) 

    /**
     * Method setdsGinpState
     * 
     * @param dsGinpState
     */
    public void setdsGinpState(Integer dsGinpState)
    {
        this.m_dsGinpState = dsGinpState;
    } //-- void setdsGinpState(Integer) 

    /**
     * Method setdsImpulseNoise
     * 
     * @param dsImpulseNoise
     */
    public void setdsImpulseNoise(Integer dsImpulseNoise)
    {
        this.m_dsImpulseNoise = dsImpulseNoise;
    } //-- void setdsImpulseNoise(Integer) 

    /**
     * Method setdsMaxBitRate
     * 
     * @param dsMaxBitRate
     */
    public void setdsMaxBitRate(Integer dsMaxBitRate)
    {
        this.m_dsMaxBitRate = dsMaxBitRate;
    } //-- void setdsMaxBitRate(Integer) 

    /**
     * Method setdsMinBitRate
     * 
     * @param dsMinBitRate
     */
    public void setdsMinBitRate(Integer dsMinBitRate)
    {
        this.m_dsMinBitRate = dsMinBitRate;
    } //-- void setdsMinBitRate(Integer) 

    /**
     * Method setisAutogenerated
     * 
     * @param isAutogenerated
     */
    public void setisAutogenerated(Integer isAutogenerated)
    {
        this.m_isAutogenerated = isAutogenerated;
    } //-- void setisAutogenerated(Integer) 

    /**
     * Method setminDownShiftSRA
     * 
     * @param minDownShiftSRA
     */
    public void setminDownShiftSRA(Integer minDownShiftSRA)
    {
        this.m_minDownShiftSRA = minDownShiftSRA;
    } //-- void setminDownShiftSRA(Integer) 

    /**
     * Method setminUpShiftSRA
     * 
     * @param minUpShiftSRA
     */
    public void setminUpShiftSRA(Integer minUpShiftSRA)
    {
        this.m_minUpShiftSRA = minUpShiftSRA;
    } //-- void setminUpShiftSRA(Integer) 

    /**
     * Method setoperatingMode
     * 
     * @param operatingMode
     */
    public void setoperatingMode(Integer operatingMode)
    {
        this.m_operatingMode = operatingMode;
    } //-- void setoperatingMode(Integer) 

    /**
     * Method setphyReTransmission
     * 
     * @param phyReTransmission
     */
    public void setphyReTransmission(Integer phyReTransmission)
    {
        this.m_phyReTransmission = phyReTransmission;
    } //-- void setphyReTransmission(Integer) 

    /**
     * Method setphyReTransmissionRS
     * 
     * @param phyReTransmissionRS
     */
    public void setphyReTransmissionRS(Integer phyReTransmissionRS)
    {
        this.m_phyReTransmissionRS = phyReTransmissionRS;
    } //-- void setphyReTransmissionRS(Integer) 

    /**
     * Method setphyReTransmissionRSUpStream
     * 
     * @param phyReTransmissionRSUpStream
     */
    public void setphyReTransmissionRSUpStream(Integer phyReTransmissionRSUpStream)
    {
        this.m_phyReTransmissionRSUpStream = phyReTransmissionRSUpStream;
    } //-- void setphyReTransmissionRSUpStream(Integer) 

    /**
     * Method setphyReTransmissionUpStream
     * 
     * @param phyReTransmissionUpStream
     */
    public void setphyReTransmissionUpStream(Integer phyReTransmissionUpStream)
    {
        this.m_phyReTransmissionUpStream = phyReTransmissionUpStream;
    } //-- void setphyReTransmissionUpStream(Integer) 

    /**
     * Method setreedSoloman
     * 
     * @param reedSoloman
     */
    public void setreedSoloman(Integer reedSoloman)
    {
        this.m_reedSoloman = reedSoloman;
    } //-- void setreedSoloman(Integer) 

    /**
     * Method setservicePackage_DSL
     * 
     * @param servicePackage_DSL
     */
    public void setservicePackage_DSL(String servicePackage_DSL)
    {
        this.m_servicePackage_DSL = servicePackage_DSL;
    } //-- void setservicePackage_DSL(String) 

    /**
     * Method setssettohalf
     * 
     * @param ssettohalf
     */
    public void setssettohalf(Integer ssettohalf)
    {
        this.m_ssettohalf = ssettohalf;
    } //-- void setssettohalf(Integer) 

    /**
     * Method setsyncstatus
     * 
     * @param syncstatus
     */
    public void setsyncstatus(String syncstatus)
    {
        this.m_syncstatus = syncstatus;
    } //-- void setsyncstatus(String) 

    /**
     * Method settrellisEncoding
     * 
     * @param trellisEncoding
     */
    public void settrellisEncoding(Integer trellisEncoding)
    {
        this.m_trellisEncoding = trellisEncoding;
    } //-- void settrellisEncoding(Integer) 

    /**
     * Method setupShiftSRAUpStream
     * 
     * @param upShiftSRAUpStream
     */
    public void setupShiftSRAUpStream(Integer upShiftSRAUpStream)
    {
        this.m_upShiftSRAUpStream = upShiftSRAUpStream;
    } //-- void setupShiftSRAUpStream(Integer) 

    /**
     * Method setupstreamSRA
     * 
     * @param upstreamSRA
     */
    public void setupstreamSRA(Integer upstreamSRA)
    {
        this.m_upstreamSRA = upstreamSRA;
    } //-- void setupstreamSRA(Integer) 

    /**
     * Method setusBitswap
     * 
     * @param usBitswap
     */
    public void setusBitswap(Integer usBitswap)
    {
        this.m_usBitswap = usBitswap;
    } //-- void setusBitswap(Integer) 

    /**
     * Method setusDelay
     * 
     * @param usDelay
     */
    public void setusDelay(Integer usDelay)
    {
        this.m_usDelay = usDelay;
    } //-- void setusDelay(Integer) 

    /**
     * Method setusGinpETRmin
     * 
     * @param usGinpETRmin
     */
    public void setusGinpETRmin(Integer usGinpETRmin)
    {
        this.m_usGinpETRmin = usGinpETRmin;
    } //-- void setusGinpETRmin(Integer) 

    /**
     * Method setusGinpIatLthre
     * 
     * @param usGinpIatLthre
     */
    public void setusGinpIatLthre(Integer usGinpIatLthre)
    {
        this.m_usGinpIatLthre = usGinpIatLthre;
    } //-- void setusGinpIatLthre(Integer) 

    /**
     * Method setusGinpIatRein
     * 
     * @param usGinpIatRein
     */
    public void setusGinpIatRein(Integer usGinpIatRein)
    {
        this.m_usGinpIatRein = usGinpIatRein;
    } //-- void setusGinpIatRein(Integer) 

    /**
     * Method setusGinpInpMin
     * 
     * @param usGinpInpMin
     */
    public void setusGinpInpMin(Integer usGinpInpMin)
    {
        this.m_usGinpInpMin = usGinpInpMin;
    } //-- void setusGinpInpMin(Integer) 

    /**
     * Method setusGinpInpMinRein
     * 
     * @param usGinpInpMinRein
     */
    public void setusGinpInpMinRein(Integer usGinpInpMinRein)
    {
        this.m_usGinpInpMinRein = usGinpInpMinRein;
    } //-- void setusGinpInpMinRein(Integer) 

    /**
     * Method setusGinpMaxDelay
     * 
     * @param usGinpMaxDelay
     */
    public void setusGinpMaxDelay(Integer usGinpMaxDelay)
    {
        this.m_usGinpMaxDelay = usGinpMaxDelay;
    } //-- void setusGinpMaxDelay(Integer) 

    /**
     * Method setusGinpMinDelay
     * 
     * @param usGinpMinDelay
     */
    public void setusGinpMinDelay(Integer usGinpMinDelay)
    {
        this.m_usGinpMinDelay = usGinpMinDelay;
    } //-- void setusGinpMinDelay(Integer) 

    /**
     * Method setusGinpNDRmax
     * 
     * @param usGinpNDRmax
     */
    public void setusGinpNDRmax(Integer usGinpNDRmax)
    {
        this.m_usGinpNDRmax = usGinpNDRmax;
    } //-- void setusGinpNDRmax(Integer) 

    /**
     * Method setusGinpShineratio
     * 
     * @param usGinpShineratio
     */
    public void setusGinpShineratio(Integer usGinpShineratio)
    {
        this.m_usGinpShineratio = usGinpShineratio;
    } //-- void setusGinpShineratio(Integer) 

    /**
     * Method setusGinpState
     * 
     * @param usGinpState
     */
    public void setusGinpState(Integer usGinpState)
    {
        this.m_usGinpState = usGinpState;
    } //-- void setusGinpState(Integer) 

    /**
     * Method setusImpulseNoise
     * 
     * @param usImpulseNoise
     */
    public void setusImpulseNoise(Integer usImpulseNoise)
    {
        this.m_usImpulseNoise = usImpulseNoise;
    } //-- void setusImpulseNoise(Integer) 

    /**
     * Method setusMaxBitRate
     * 
     * @param usMaxBitRate
     */
    public void setusMaxBitRate(Integer usMaxBitRate)
    {
        this.m_usMaxBitRate = usMaxBitRate;
    } //-- void setusMaxBitRate(Integer) 

    /**
     * Method setusMinBitRate
     * 
     * @param usMinBitRate
     */
    public void setusMinBitRate(Integer usMinBitRate)
    {
        this.m_usMinBitRate = usMinBitRate;
    } //-- void setusMinBitRate(Integer) 

    /**
     * Method setvdsl2Profile
     * 
     * @param vdsl2Profile
     */
    public void setvdsl2Profile(Integer vdsl2Profile)
    {
        this.m_vdsl2Profile = vdsl2Profile;
    } //-- void setvdsl2Profile(Integer) 

    /**
     * Method setvdsl2US0Shape
     * 
     * @param vdsl2US0Shape
     */
    public void setvdsl2US0Shape(Integer vdsl2US0Shape)
    {
        this.m_vdsl2US0Shape = vdsl2US0Shape;
    } //-- void setvdsl2US0Shape(Integer) 

    /**
     * Method updateFields
     * 
     * @param obj1
     */
    protected void updateFields(CMSObject obj1)
    {
        if( obj1 instanceof B6DSLProfile ) {
            super.updateFields(obj1);
            B6DSLProfile obj = (B6DSLProfile)obj1;


           if (obj.getDSDownShiftSNR() != null )
               setDSDownShiftSNR((String)Helper.copy(obj.getDSDownShiftSNR()));
           if (obj.getDSMaxSNR() != null )
               setDSMaxSNR((String)Helper.copy(obj.getDSMaxSNR()));
           if (obj.getDSMinSNR() != null )
               setDSMinSNR((String)Helper.copy(obj.getDSMinSNR()));
           if (obj.getDSTargetSNR() != null )
               setDSTargetSNR((String)Helper.copy(obj.getDSTargetSNR()));
           if (obj.getDSUpShiftSNR() != null )
               setDSUpShiftSNR((String)Helper.copy(obj.getDSUpShiftSNR()));
           if (obj.getName() != null )
               setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
           if (obj.getSRAAdminState() != null )
               setSRAAdminState((Integer)Helper.copy(obj.getSRAAdminState()));
           if (obj.getUSDownShiftSNR() != null )
               setUSDownShiftSNR((String)Helper.copy(obj.getUSDownShiftSNR()));
           if (obj.getUSMaxSNR() != null )
               setUSMaxSNR((String)Helper.copy(obj.getUSMaxSNR()));
           if (obj.getUSMinSNR() != null )
               setUSMinSNR((String)Helper.copy(obj.getUSMinSNR()));
           if (obj.getUSTargetSNR() != null )
               setUSTargetSNR((String)Helper.copy(obj.getUSTargetSNR()));
           if (obj.getUSUpShiftSNR() != null )
               setUSUpShiftSNR((String)Helper.copy(obj.getUSUpShiftSNR()));
           if (obj.getdescription() != null )
               setdescription((String)Helper.copy(obj.getdescription()));
           if (obj.getdownShiftSRAUpStream() != null )
               setdownShiftSRAUpStream((Integer)Helper.copy(obj.getdownShiftSRAUpStream()));
           if (obj.getdsBitswap() != null )
               setdsBitswap((Integer)Helper.copy(obj.getdsBitswap()));
           if (obj.getdsDelay() != null )
               setdsDelay((Integer)Helper.copy(obj.getdsDelay()));
           if (obj.getdsGinpETRmin() != null )
               setdsGinpETRmin((Integer)Helper.copy(obj.getdsGinpETRmin()));
           if (obj.getdsGinpIatLthre() != null )
               setdsGinpIatLthre((Integer)Helper.copy(obj.getdsGinpIatLthre()));
           if (obj.getdsGinpIatRein() != null )
               setdsGinpIatRein((Integer)Helper.copy(obj.getdsGinpIatRein()));
           if (obj.getdsGinpInpMin() != null )
               setdsGinpInpMin((Integer)Helper.copy(obj.getdsGinpInpMin()));
           if (obj.getdsGinpInpMinRein() != null )
               setdsGinpInpMinRein((Integer)Helper.copy(obj.getdsGinpInpMinRein()));
           if (obj.getdsGinpMaxDelay() != null )
               setdsGinpMaxDelay((Integer)Helper.copy(obj.getdsGinpMaxDelay()));
           if (obj.getdsGinpMinDelay() != null )
               setdsGinpMinDelay((Integer)Helper.copy(obj.getdsGinpMinDelay()));
           if (obj.getdsGinpNDRmax() != null )
               setdsGinpNDRmax((Integer)Helper.copy(obj.getdsGinpNDRmax()));
           if (obj.getdsGinpShineratio() != null )
               setdsGinpShineratio((Integer)Helper.copy(obj.getdsGinpShineratio()));
           if (obj.getdsGinpState() != null )
               setdsGinpState((Integer)Helper.copy(obj.getdsGinpState()));
           if (obj.getdsImpulseNoise() != null )
               setdsImpulseNoise((Integer)Helper.copy(obj.getdsImpulseNoise()));
           if (obj.getdsMaxBitRate() != null )
               setdsMaxBitRate((Integer)Helper.copy(obj.getdsMaxBitRate()));
           if (obj.getdsMinBitRate() != null )
               setdsMinBitRate((Integer)Helper.copy(obj.getdsMinBitRate()));
           if (obj.getisAutogenerated() != null )
               setisAutogenerated((Integer)Helper.copy(obj.getisAutogenerated()));
           if (obj.getminDownShiftSRA() != null )
               setminDownShiftSRA((Integer)Helper.copy(obj.getminDownShiftSRA()));
           if (obj.getminUpShiftSRA() != null )
               setminUpShiftSRA((Integer)Helper.copy(obj.getminUpShiftSRA()));
           if (obj.getoperatingMode() != null )
               setoperatingMode((Integer)Helper.copy(obj.getoperatingMode()));
           if (obj.getphyReTransmission() != null )
               setphyReTransmission((Integer)Helper.copy(obj.getphyReTransmission()));
           if (obj.getphyReTransmissionRS() != null )
               setphyReTransmissionRS((Integer)Helper.copy(obj.getphyReTransmissionRS()));
           if (obj.getphyReTransmissionRSUpStream() != null )
               setphyReTransmissionRSUpStream((Integer)Helper.copy(obj.getphyReTransmissionRSUpStream()));
           if (obj.getphyReTransmissionUpStream() != null )
               setphyReTransmissionUpStream((Integer)Helper.copy(obj.getphyReTransmissionUpStream()));
           if (obj.getreedSoloman() != null )
               setreedSoloman((Integer)Helper.copy(obj.getreedSoloman()));
           if (obj.getservicePackage_DSL() != null )
               setservicePackage_DSL((String)Helper.copy(obj.getservicePackage_DSL()));
           if (obj.getssettohalf() != null )
               setssettohalf((Integer)Helper.copy(obj.getssettohalf()));
           if (obj.getsyncstatus() != null )
               setsyncstatus((String)Helper.copy(obj.getsyncstatus()));
           if (obj.gettrellisEncoding() != null )
               settrellisEncoding((Integer)Helper.copy(obj.gettrellisEncoding()));
           if (obj.getupShiftSRAUpStream() != null )
               setupShiftSRAUpStream((Integer)Helper.copy(obj.getupShiftSRAUpStream()));
           if (obj.getupstreamSRA() != null )
               setupstreamSRA((Integer)Helper.copy(obj.getupstreamSRA()));
           if (obj.getusBitswap() != null )
               setusBitswap((Integer)Helper.copy(obj.getusBitswap()));
           if (obj.getusDelay() != null )
               setusDelay((Integer)Helper.copy(obj.getusDelay()));
           if (obj.getusGinpETRmin() != null )
               setusGinpETRmin((Integer)Helper.copy(obj.getusGinpETRmin()));
           if (obj.getusGinpIatLthre() != null )
               setusGinpIatLthre((Integer)Helper.copy(obj.getusGinpIatLthre()));
           if (obj.getusGinpIatRein() != null )
               setusGinpIatRein((Integer)Helper.copy(obj.getusGinpIatRein()));
           if (obj.getusGinpInpMin() != null )
               setusGinpInpMin((Integer)Helper.copy(obj.getusGinpInpMin()));
           if (obj.getusGinpInpMinRein() != null )
               setusGinpInpMinRein((Integer)Helper.copy(obj.getusGinpInpMinRein()));
           if (obj.getusGinpMaxDelay() != null )
               setusGinpMaxDelay((Integer)Helper.copy(obj.getusGinpMaxDelay()));
           if (obj.getusGinpMinDelay() != null )
               setusGinpMinDelay((Integer)Helper.copy(obj.getusGinpMinDelay()));
           if (obj.getusGinpNDRmax() != null )
               setusGinpNDRmax((Integer)Helper.copy(obj.getusGinpNDRmax()));
           if (obj.getusGinpShineratio() != null )
               setusGinpShineratio((Integer)Helper.copy(obj.getusGinpShineratio()));
           if (obj.getusGinpState() != null )
               setusGinpState((Integer)Helper.copy(obj.getusGinpState()));
           if (obj.getusImpulseNoise() != null )
               setusImpulseNoise((Integer)Helper.copy(obj.getusImpulseNoise()));
           if (obj.getusMaxBitRate() != null )
               setusMaxBitRate((Integer)Helper.copy(obj.getusMaxBitRate()));
           if (obj.getusMinBitRate() != null )
               setusMinBitRate((Integer)Helper.copy(obj.getusMinBitRate()));
           if (obj.getvdsl2Profile() != null )
               setvdsl2Profile((Integer)Helper.copy(obj.getvdsl2Profile()));
           if (obj.getvdsl2US0Shape() != null )
               setvdsl2US0Shape((Integer)Helper.copy(obj.getvdsl2US0Shape()));
           if (obj.getIdentityValue() != null )
               setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void updateFields(CMSObject) 

//BEGIN CODE
    
    public void setusMinSNR(Double usMinSNR)
    {
    	if(usMinSNR != null)
    		this.m_USMinSNR = String.valueOf(usMinSNR);
    	else
    		this.m_USMinSNR = null;
    }
    public void setusDownShiftSNR(Double usDownShiftSNR)
    {
    	if(usDownShiftSNR != null)
    		this.m_USDownShiftSNR = String.valueOf(usDownShiftSNR);
    	else
    		this.m_USDownShiftSNR = null;
    }
    public void setdsUpShiftSNR(Double dsUpShiftSNR)
    {
    	if(dsUpShiftSNR != null)
    		this.m_DSUpShiftSNR = String.valueOf(dsUpShiftSNR);
    	else
    		this.m_DSUpShiftSNR = null;
    }
    public void setdsDownShiftSNR(Double dsDownShiftSNR)
    {
    	if(dsDownShiftSNR != null)
    		this.m_DSDownShiftSNR = String.valueOf(dsDownShiftSNR);
    	else
    		this.m_DSDownShiftSNR = null;
    }
    public void setusUpShiftSNR(Double usUpShiftSNR)
    {
    	if(usUpShiftSNR != null)
    		this.m_USUpShiftSNR = String.valueOf(usUpShiftSNR);
    	else
    		this.m_USUpShiftSNR = null;
    }
    public void setusTargetSNR(Double usTargetSNR)
    {
    	if(usTargetSNR != null)
    		this.m_USTargetSNR = String.valueOf(usTargetSNR);
    	else
    		this.m_USTargetSNR = null;
    }
    public void setdsMaxSNR(Double dsMaxSNR)
    {
    	if(dsMaxSNR != null)
    		this.m_DSMaxSNR = String.valueOf(dsMaxSNR);
    	else
    		this.m_DSMaxSNR = null;
    }
    public void setusMaxSNR(Double usMaxSNR)
    {
    	if(usMaxSNR != null)
    		this.m_USMaxSNR = String.valueOf(usMaxSNR);
    	else
    		this.m_USMaxSNR = null;
    }
    public void setdsTargetSNR(Double dsTargetSNR)
    {
    	if(dsTargetSNR != null)
    		this.m_DSTargetSNR = String.valueOf(dsTargetSNR);
    	else
    		this.m_DSTargetSNR = null;
    }
    public void setdsMinSNR(Double dsMinSNR)
    {
    	if(dsMinSNR != null)
    		this.m_DSMinSNR = String.valueOf(dsMinSNR);
    	else
    		this.m_DSMinSNR = null;
    }
    
    public Double getusMinSNR()
    {
    	if(this.m_USMinSNR !=null)
    		return Double.valueOf(m_USMinSNR).doubleValue();
    	else
    		return null;
    }
    
    public Double getusDownShiftSNR()
    {
    	if(this.m_USDownShiftSNR !=null)
    		return Double.valueOf(m_USDownShiftSNR).doubleValue();
    	else
    		return null;
    }
    public Double getdsUpShiftSNR()
    {
    	if(this.m_DSUpShiftSNR !=null)
    		return Double.valueOf(m_DSUpShiftSNR).doubleValue();
    	else
    		return null;
    }
    public Double getdsDownShiftSNR()
    {
    	if(this.m_DSDownShiftSNR !=null)
    		return Double.valueOf(m_DSDownShiftSNR).doubleValue();
    	else
    		return null;
    }
    public Double getusUpShiftSNR()
    {
    	if(this.m_USUpShiftSNR !=null)
    		return Double.valueOf(m_USUpShiftSNR).doubleValue();
    	else
    		return null;
    }
    public Double getusTargetSNR()
    {
    	if(this.m_USTargetSNR !=null)
    		return Double.valueOf(m_USTargetSNR).doubleValue();
    	else
    		return null;
    }
    public Double getdsMaxSNR()
    {
    	if(this.m_DSMaxSNR !=null)
    		return Double.valueOf(m_DSMaxSNR).doubleValue();
    	else
    		return null;
    }
    public Double getusMaxSNR()
    {
    	if(this.m_USMaxSNR !=null)
    		return Double.valueOf(m_USMaxSNR).doubleValue();
    	else
    		return null;
    }
    public Double getdsTargetSNR()
    {
    	if(this.m_DSTargetSNR !=null)
    		return Double.valueOf(m_DSTargetSNR).doubleValue();
    	else
    		return null;
    }
    public Double getdsMinSNR()
    {
    	if(this.m_DSMinSNR !=null)
    		return Double.valueOf(m_DSMinSNR).doubleValue();
    	else
    		return null;
    }
   
	public void setconvertName(String convertName) {
		this.m_Name = new EMSAid(convertName);
	} // -- void setconvertName(String)

	public String getconvertName() {
		return this.m_Name.toString();
	}
	
	public Collection doQuery(DbTransaction tx, String filter)
			throws EMSException {
		if (Log.db().isDebugEnabled())
			Log.db().debug("Inside doQuery");
		ICMSQuery query = getDBQuery(this.getTypeName(), null);
		Collection coll = query.exec((Object) tx.getDatabase(), (Object) tx);
		if (Log.db().isDebugEnabled())
			Log.db().debug("Out of doQuery");
		return coll;
	}

	public CMSObject doLoad(DbTransaction tx) throws EMSException {
		C7Database db = C7Database.getInstance();
		CMSObject obj = null;
		try {
			db.beginTransaction();
			Collection resultList = db.executeQuery(this.getClass(), "name = '"
					+ this.getIdentityValue().toString() + "'", -1, -1);
			if (resultList != null && !resultList.isEmpty()) {
				Iterator itr = resultList.iterator();
				obj = (CMSObject) itr.next();
			}
			db.commitTransaction();
			} catch (Exception e) {
				e.printStackTrace();
				db.rollbackTransaction();
			}finally{
				db.close();
			}
		if (obj == null)
			throw new EMSDatabaseException(
					EMSDatabaseException._loadNonExistentFail_,
					"Object does not exist");
		else
			return obj;
	}

	public ICMSQuery getDBQuery(String type, String filter) {
		if (filter == null || filter.equals(""))
			return new EMSGetAllQuery(type);
		else {
			Log.meta().error("BaseEMSObject: filterQuery is not supported");
			return null;
		}
	}

	public boolean isIdentityValuePrimaryKey() {
		return true;
	}
	
	 public void doCreate(DbTransaction tx) throws EMSException {
	     addDefaultValueForNewAttrs();
	       super.doCreate(tx);
	    }

    private void addDefaultValueForNewAttrs() {
        if(this.getdsGinpState()==null)this.setdsGinpState(0);
	     if(this.getusGinpState()==null)this.setusGinpState(0);
	     if(this.getdsGinpInpMin()==null)this.setdsGinpInpMin(3);
	     if(this.getusGinpInpMin()==null)this.setusGinpInpMin(3);
	     
	     if(this.getdsGinpInpMinRein()==null)this.setdsGinpInpMinRein(0);
         if(this.getusGinpInpMinRein()==null)this.setusGinpInpMinRein(0);
         
         if(this.getdsGinpMinDelay()==null)this.setdsGinpMinDelay(0);
         if(this.getusGinpMinDelay()==null)this.setusGinpMinDelay(0);
         
         if(this.getdsGinpMaxDelay()==null)this.setdsGinpMaxDelay(20);
         if(this.getusGinpMaxDelay()==null)this.setusGinpMaxDelay(20);
         
         if(this.getdsGinpETRmin()==null)this.setdsGinpETRmin(32);
         if(this.getusGinpETRmin()==null)this.setusGinpETRmin(32);
         
         if(this.getdsGinpIatRein()==null)this.setdsGinpIatRein(0);
         if(this.getusGinpIatRein()==null)this.setusGinpIatRein(0);
         
         if(this.getdsGinpNDRmax()==null)this.setdsGinpNDRmax(128000);
         if(this.getusGinpNDRmax()==null)this.setusGinpNDRmax(128000);
         
         if(this.getdsGinpShineratio()==null)this.setdsGinpShineratio(100);
         if(this.getusGinpShineratio()==null)this.setusGinpShineratio(100);
         
    }
    
  //END CODE
}
