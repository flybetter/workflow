/*
 * $Id$
 */

package com.calix.bseries.server.dbmodel;

  //---------------------------------/
 //- Imported classes and packages -/
//---------------------------------/
//BEGIN IMPORTS
import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;

import com.calix.ems.database.C7Database;
import com.calix.ems.database.DbTransaction;
import com.calix.ems.exception.EMSDatabaseException;
import com.calix.ems.exception.EMSException;
import com.calix.ems.query.EMSGetAllQuery;
import com.calix.ems.query.ICMSQuery;
import com.calix.system.common.log.Log;
//END IMPORTS
import com.calix.ems.util.TLVHelper;
import com.calix.system.common.protocol.tlv.TLV;
import com.calix.system.server.dbmodel.*;

/**
 * Class B6BLCPOTSProfile.
 * 
 * @version $Revision$ $Date$
 */
public class B6BLCPOTSProfile extends com.calix.system.server.dbmodel.CMSObject {


      //--------------------------/
     //- Class/Member Variables -/
    //--------------------------/

    /**
     * Field m_Name
     */
    public com.calix.system.server.dbmodel.ICMSAid m_Name;

    /**
     * Field m_RECEIVELevel
     */
    public String m_RECEIVELevel;

    /**
     * Field m_TRANSMITLevel
     */
    public String m_TRANSMITLevel;

    /**
     * Field m_codecList
     */
    public String m_codecList;

    /**
     * Field m_description
     */
    public String m_description;

    /**
     * Field m_echoCancel
     */
    public Integer m_echoCancel;

    /**
     * Field m_echoTail
     */
    public Integer m_echoTail;

    /**
     * Field m_echoToneDisabler
     */
    public Integer m_echoToneDisabler;

    /**
     * Field m_faxcngdetect
     */
    public Integer m_faxcngdetect;

    /**
     * Field m_faxcngtimer
     */
    public Integer m_faxcngtimer;

    /**
     * Field m_faxdelay
     */
    public Integer m_faxdelay;

    /**
     * Field m_forwardDisconnect
     */
    public Integer m_forwardDisconnect;

    /**
     * Field m_inputGain
     */
    public Integer m_inputGain;

    /**
     * Field m_isAutogenerated
     */
    public Integer m_isAutogenerated;

    /**
     * Field m_modemCodecByPass
     */
    public Integer m_modemCodecByPass;

    /**
     * Field m_outputGain
     */
    public Integer m_outputGain;

    /**
     * Field m_rtpSignalling
     */
    public Integer m_rtpSignalling;

    /**
     * Field m_servicePackage_POTSProfile
     */
    public String m_servicePackage_POTSProfile;

    /**
     * Field m_signalType
     */
    public Integer m_signalType;

    /**
     * Field m_syncstatus
     */
    public String m_syncstatus;

    /**
     * Field m_voiceServiceType
     */
    public Integer m_voiceServiceType;

    /**
     * Field TYPE_NAME
     */
    public static String TYPE_NAME = "B6BLCPOTSProfile";

    /**
     * Field flowID
     */
    public static final int flowID = 1;


      //----------------/
     //- Constructors -/
    //----------------/

    public B6BLCPOTSProfile() {
        super();
    } //-- com.calix.bseries.server.dbmodel.B6BLCPOTSProfile()


      //-----------/
     //- Methods -/
    //-----------/

    /**
     * Method copyFields
     * 
     * @param obj1
     */
    protected void copyFields(CMSObject obj1)
    {
        if( obj1 instanceof B6BLCPOTSProfile ) {
            super.copyFields(obj1);
            B6BLCPOTSProfile obj = (B6BLCPOTSProfile)obj1;
            setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
            setRECEIVELevel((String)Helper.copy(obj.getRECEIVELevel()));
            setTRANSMITLevel((String)Helper.copy(obj.getTRANSMITLevel()));
            setcodecList((String)Helper.copy(obj.getcodecList()));
            setdescription((String)Helper.copy(obj.getdescription()));
            setechoCancel((Integer)Helper.copy(obj.getechoCancel()));
            setechoTail((Integer)Helper.copy(obj.getechoTail()));
            setechoToneDisabler((Integer)Helper.copy(obj.getechoToneDisabler()));
            setfaxcngdetect((Integer)Helper.copy(obj.getfaxcngdetect()));
            setfaxcngtimer((Integer)Helper.copy(obj.getfaxcngtimer()));
            setfaxdelay((Integer)Helper.copy(obj.getfaxdelay()));
            setforwardDisconnect((Integer)Helper.copy(obj.getforwardDisconnect()));
            setinputGain((Integer)Helper.copy(obj.getinputGain()));
            setisAutogenerated((Integer)Helper.copy(obj.getisAutogenerated()));
            setmodemCodecByPass((Integer)Helper.copy(obj.getmodemCodecByPass()));
            setoutputGain((Integer)Helper.copy(obj.getoutputGain()));
            setrtpSignalling((Integer)Helper.copy(obj.getrtpSignalling()));
            setservicePackage_POTSProfile((String)Helper.copy(obj.getservicePackage_POTSProfile()));
            setsignalType((Integer)Helper.copy(obj.getsignalType()));
            setsyncstatus((String)Helper.copy(obj.getsyncstatus()));
            setvoiceServiceType((Integer)Helper.copy(obj.getvoiceServiceType()));
            setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void copyFields(CMSObject) 

    /**
     * Method getIdentityValue
     */
    public com.calix.system.server.dbmodel.ICMSAid getIdentityValue()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getIdentityValue() 

    /**
     * Method getName
     */
    public com.calix.system.server.dbmodel.ICMSAid getName()
    {
        return this.m_Name;
    } //-- com.calix.system.server.dbmodel.ICMSAid getName() 

    /**
     * Method getRECEIVELevel
     */
    public String getRECEIVELevel()
    {
        return this.m_RECEIVELevel;
    } //-- String getRECEIVELevel() 

    /**
     * Method getTRANSMITLevel
     */
    public String getTRANSMITLevel()
    {
        return this.m_TRANSMITLevel;
    } //-- String getTRANSMITLevel() 

    /**
     * Method getTlvType
     */
    public int getTlvType()
    {
        return BseriesTlvConstants.B6BLCPOTSProfile;
    } //-- int getTlvType() 

    /**
     * Method getTypeName
     */
    public String getTypeName()
    {
        return TYPE_NAME;
    } //-- String getTypeName() 

    /**
     * Method getcodecList
     */
    public String getcodecList()
    {
        return this.m_codecList;
    } //-- String getcodecList() 

    /**
     * Method getdescription
     */
    public String getdescription()
    {
        return this.m_description;
    } //-- String getdescription() 

    /**
     * Method getechoCancel
     */
    public Integer getechoCancel()
    {
        return this.m_echoCancel;
    } //-- Integer getechoCancel() 

    /**
     * Method getechoTail
     */
    public Integer getechoTail()
    {
        return this.m_echoTail;
    } //-- Integer getechoTail() 

    /**
     * Method getechoToneDisabler
     */
    public Integer getechoToneDisabler()
    {
        return this.m_echoToneDisabler;
    } //-- Integer getechoToneDisabler() 

    /**
     * Method getfaxcngdetect
     */
    public Integer getfaxcngdetect()
    {
        return this.m_faxcngdetect;
    } //-- Integer getfaxcngdetect() 

    /**
     * Method getfaxcngtimer
     */
    public Integer getfaxcngtimer()
    {
        return this.m_faxcngtimer;
    } //-- Integer getfaxcngtimer() 

    /**
     * Method getfaxdelay
     */
    public Integer getfaxdelay()
    {
        return this.m_faxdelay;
    } //-- Integer getfaxdelay() 

    /**
     * Method getforwardDisconnect
     */
    public Integer getforwardDisconnect()
    {
        return this.m_forwardDisconnect;
    } //-- Integer getforwardDisconnect() 

    /**
     * Method getinputGain
     */
    public Integer getinputGain()
    {
        return this.m_inputGain;
    } //-- Integer getinputGain() 

    /**
     * Method getisAutogenerated
     */
    public Integer getisAutogenerated()
    {
        return this.m_isAutogenerated;
    } //-- Integer getisAutogenerated() 

    /**
     * Method getmodemCodecByPass
     */
    public Integer getmodemCodecByPass()
    {
        return this.m_modemCodecByPass;
    } //-- Integer getmodemCodecByPass() 

    /**
     * Method getoutputGain
     */
    public Integer getoutputGain()
    {
        return this.m_outputGain;
    } //-- Integer getoutputGain() 

    /**
     * Method getrtpSignalling
     */
    public Integer getrtpSignalling()
    {
        return this.m_rtpSignalling;
    } //-- Integer getrtpSignalling() 

    /**
     * Method getservicePackage_POTSProfile
     */
    public String getservicePackage_POTSProfile()
    {
        return this.m_servicePackage_POTSProfile;
    } //-- String getservicePackage_POTSProfile() 

    /**
     * Method getsignalType
     */
    public Integer getsignalType()
    {
        return this.m_signalType;
    } //-- Integer getsignalType() 

    /**
     * Method getsyncstatus
     */
    public String getsyncstatus()
    {
        return this.m_syncstatus;
    } //-- String getsyncstatus() 

    /**
     * Method getvoiceServiceType
     */
    public Integer getvoiceServiceType()
    {
        return this.m_voiceServiceType;
    } //-- Integer getvoiceServiceType() 

    /**
     * Method populateAttributeFromTLV
     * 
     * @param tlv
     * @param from_version
     */
    public void populateAttributeFromTLV(TLV tlv, SwVersionNo from_version)
    {
        if (tlv == null)
            return;
        switch (tlv.getType()) {
            case 0x345B:
                if (m_description == null) {
                    m_description = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x345C:
                if (m_servicePackage_POTSProfile == null) {
                    m_servicePackage_POTSProfile = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x345D:
                // More than one attributes with same tlv type!
                // These will be processed in the order they arrive
                if (m_isAutogenerated == null) {
                    m_isAutogenerated = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                if (m_voiceServiceType == null) {
                    m_voiceServiceType = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x345F:
                if (m_rtpSignalling == null) {
                    m_rtpSignalling = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3460:
                if (m_signalType == null) {
                    m_signalType = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3461:
                if (m_codecList == null) {
                    m_codecList = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3462:
                if (m_outputGain == null) {
                    m_outputGain = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3463:
                if (m_inputGain == null) {
                    m_inputGain = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3464:
                if (m_TRANSMITLevel == null) {
                    m_TRANSMITLevel = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3465:
                if (m_RECEIVELevel == null) {
                    m_RECEIVELevel = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3466:
                if (m_echoCancel == null) {
                    m_echoCancel = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3467:
                if (m_echoTail == null) {
                    m_echoTail = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3468:
                if (m_echoToneDisabler == null) {
                    m_echoToneDisabler = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x3469:
                if (m_forwardDisconnect == null) {
                    m_forwardDisconnect = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x346A:
                if (m_modemCodecByPass == null) {
                    m_modemCodecByPass = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x346B:
                if (m_faxcngdetect == null) {
                    m_faxcngdetect = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x346C:
                if (m_faxcngtimer == null) {
                    m_faxcngtimer = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x346D:
                if (m_faxdelay == null) {
                    m_faxdelay = TLVHelper.getIntegerValueOfTLV(tlv );
                    return;
                }
                break;
            case 0x346E:
                if (m_syncstatus == null) {
                    m_syncstatus = TLVHelper.getStringValueOfTLV(tlv );
                    return;
                }
                break;
        }
        super.populateAttributeFromTLV(tlv, from_version);
    } //-- void populateAttributeFromTLV(TLV, SwVersionNo) 

    /**
     * Method populateTLVFromAttributes
     * 
     * @param tlv
     * @param to_version
     */
    public void populateTLVFromAttributes(TLV tlv, SwVersionNo to_version)
    {
        if (tlv == null)
            return;
        super.populateTLVFromAttributes(tlv, to_version);
        TLVHelper.addEmbeddedTLV(tlv, 0x3465, m_RECEIVELevel);
        TLVHelper.addEmbeddedTLV(tlv, 0x3464, m_TRANSMITLevel);
        TLVHelper.addEmbeddedTLV(tlv, 0x3461, m_codecList);
        TLVHelper.addEmbeddedTLV(tlv, 0x345B, m_description);
        TLVHelper.addEmbeddedTLV(tlv, 0x3466, m_echoCancel);
        TLVHelper.addEmbeddedTLV(tlv, 0x3467, m_echoTail);
        TLVHelper.addEmbeddedTLV(tlv, 0x3468, m_echoToneDisabler);
        TLVHelper.addEmbeddedTLV(tlv, 0x346B, m_faxcngdetect);
        TLVHelper.addEmbeddedTLV(tlv, 0x346C, m_faxcngtimer);
        TLVHelper.addEmbeddedTLV(tlv, 0x346D, m_faxdelay);
        TLVHelper.addEmbeddedTLV(tlv, 0x3469, m_forwardDisconnect);
        TLVHelper.addEmbeddedTLV(tlv, 0x3463, m_inputGain);
        TLVHelper.addEmbeddedTLV(tlv, 0x345D, m_isAutogenerated);
        TLVHelper.addEmbeddedTLV(tlv, 0x346A, m_modemCodecByPass);
        TLVHelper.addEmbeddedTLV(tlv, 0x3462, m_outputGain);
        TLVHelper.addEmbeddedTLV(tlv, 0x345F, m_rtpSignalling);
        TLVHelper.addEmbeddedTLV(tlv, 0x345C, m_servicePackage_POTSProfile);
        TLVHelper.addEmbeddedTLV(tlv, 0x3460, m_signalType);
        TLVHelper.addEmbeddedTLV(tlv, 0x346E, m_syncstatus);
        TLVHelper.addEmbeddedTLV(tlv, 0x345D, m_voiceServiceType);
    } //-- void populateTLVFromAttributes(TLV, SwVersionNo) 

    /**
     * Method setIdentityValue
     * 
     * @param Name
     */
    public boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = (com.calix.system.server.dbmodel.ICMSAid)Name;
        return true;
    } //-- boolean setIdentityValue(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setName
     * 
     * @param Name
     */
    public void setName(com.calix.system.server.dbmodel.ICMSAid Name)
    {
        this.m_Name = Name;
    } //-- void setName(com.calix.system.server.dbmodel.ICMSAid) 

    /**
     * Method setRECEIVELevel
     * 
     * @param RECEIVELevel
     */
    public void setRECEIVELevel(String RECEIVELevel)
    {
        this.m_RECEIVELevel = RECEIVELevel;
    } //-- void setRECEIVELevel(String) 

    /**
     * Method setTRANSMITLevel
     * 
     * @param TRANSMITLevel
     */
    public void setTRANSMITLevel(String TRANSMITLevel)
    {
        this.m_TRANSMITLevel = TRANSMITLevel;
    } //-- void setTRANSMITLevel(String) 

    /**
     * Method setTypeName
     * 
     * @param typeName
     */
    public boolean setTypeName(String typeName)
    {
        return false;
    } //-- boolean setTypeName(String) 

    /**
     * Method setcodecList
     * 
     * @param codecList
     */
    public void setcodecList(String codecList)
    {
        this.m_codecList = codecList;
    } //-- void setcodecList(String) 

    /**
     * Method setdescription
     * 
     * @param description
     */
    public void setdescription(String description)
    {
        this.m_description = description;
    } //-- void setdescription(String) 

    /**
     * Method setechoCancel
     * 
     * @param echoCancel
     */
    public void setechoCancel(Integer echoCancel)
    {
        this.m_echoCancel = echoCancel;
    } //-- void setechoCancel(Integer) 

    /**
     * Method setechoTail
     * 
     * @param echoTail
     */
    public void setechoTail(Integer echoTail)
    {
        this.m_echoTail = echoTail;
    } //-- void setechoTail(Integer) 

    /**
     * Method setechoToneDisabler
     * 
     * @param echoToneDisabler
     */
    public void setechoToneDisabler(Integer echoToneDisabler)
    {
        this.m_echoToneDisabler = echoToneDisabler;
    } //-- void setechoToneDisabler(Integer) 

    /**
     * Method setfaxcngdetect
     * 
     * @param faxcngdetect
     */
    public void setfaxcngdetect(Integer faxcngdetect)
    {
        this.m_faxcngdetect = faxcngdetect;
    } //-- void setfaxcngdetect(Integer) 

    /**
     * Method setfaxcngtimer
     * 
     * @param faxcngtimer
     */
    public void setfaxcngtimer(Integer faxcngtimer)
    {
        this.m_faxcngtimer = faxcngtimer;
    } //-- void setfaxcngtimer(Integer) 

    /**
     * Method setfaxdelay
     * 
     * @param faxdelay
     */
    public void setfaxdelay(Integer faxdelay)
    {
        this.m_faxdelay = faxdelay;
    } //-- void setfaxdelay(Integer) 

    /**
     * Method setforwardDisconnect
     * 
     * @param forwardDisconnect
     */
    public void setforwardDisconnect(Integer forwardDisconnect)
    {
        this.m_forwardDisconnect = forwardDisconnect;
    } //-- void setforwardDisconnect(Integer) 

    /**
     * Method setinputGain
     * 
     * @param inputGain
     */
    public void setinputGain(Integer inputGain)
    {
        this.m_inputGain = inputGain;
    } //-- void setinputGain(Integer) 

    /**
     * Method setisAutogenerated
     * 
     * @param isAutogenerated
     */
    public void setisAutogenerated(Integer isAutogenerated)
    {
        this.m_isAutogenerated = isAutogenerated;
    } //-- void setisAutogenerated(Integer) 

    /**
     * Method setmodemCodecByPass
     * 
     * @param modemCodecByPass
     */
    public void setmodemCodecByPass(Integer modemCodecByPass)
    {
        this.m_modemCodecByPass = modemCodecByPass;
    } //-- void setmodemCodecByPass(Integer) 

    /**
     * Method setoutputGain
     * 
     * @param outputGain
     */
    public void setoutputGain(Integer outputGain)
    {
        this.m_outputGain = outputGain;
    } //-- void setoutputGain(Integer) 

    /**
     * Method setrtpSignalling
     * 
     * @param rtpSignalling
     */
    public void setrtpSignalling(Integer rtpSignalling)
    {
        this.m_rtpSignalling = rtpSignalling;
    } //-- void setrtpSignalling(Integer) 

    /**
     * Method setservicePackage_POTSProfile
     * 
     * @param servicePackage_POTSProfile
     */
    public void setservicePackage_POTSProfile(String servicePackage_POTSProfile)
    {
        this.m_servicePackage_POTSProfile = servicePackage_POTSProfile;
    } //-- void setservicePackage_POTSProfile(String) 

    /**
     * Method setsignalType
     * 
     * @param signalType
     */
    public void setsignalType(Integer signalType)
    {
        this.m_signalType = signalType;
    } //-- void setsignalType(Integer) 

    /**
     * Method setsyncstatus
     * 
     * @param syncstatus
     */
    public void setsyncstatus(String syncstatus)
    {
        this.m_syncstatus = syncstatus;
    } //-- void setsyncstatus(String) 

    /**
     * Method setvoiceServiceType
     * 
     * @param voiceServiceType
     */
    public void setvoiceServiceType(Integer voiceServiceType)
    {
        this.m_voiceServiceType = voiceServiceType;
    } //-- void setvoiceServiceType(Integer) 

    /**
     * Method updateFields
     * 
     * @param obj1
     */
    protected void updateFields(CMSObject obj1)
    {
        if( obj1 instanceof B6BLCPOTSProfile ) {
            super.updateFields(obj1);
            B6BLCPOTSProfile obj = (B6BLCPOTSProfile)obj1;
           if (obj.getName() != null )
               setName((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getName()));
           if (obj.getRECEIVELevel() != null )
               setRECEIVELevel((String)Helper.copy(obj.getRECEIVELevel()));
           if (obj.getTRANSMITLevel() != null )
               setTRANSMITLevel((String)Helper.copy(obj.getTRANSMITLevel()));
           if (obj.getcodecList() != null )
               setcodecList((String)Helper.copy(obj.getcodecList()));
           if (obj.getdescription() != null )
               setdescription((String)Helper.copy(obj.getdescription()));
           if (obj.getechoCancel() != null )
               setechoCancel((Integer)Helper.copy(obj.getechoCancel()));
           if (obj.getechoTail() != null )
               setechoTail((Integer)Helper.copy(obj.getechoTail()));
           if (obj.getechoToneDisabler() != null )
               setechoToneDisabler((Integer)Helper.copy(obj.getechoToneDisabler()));
           if (obj.getfaxcngdetect() != null )
               setfaxcngdetect((Integer)Helper.copy(obj.getfaxcngdetect()));
           if (obj.getfaxcngtimer() != null )
               setfaxcngtimer((Integer)Helper.copy(obj.getfaxcngtimer()));
           if (obj.getfaxdelay() != null )
               setfaxdelay((Integer)Helper.copy(obj.getfaxdelay()));
           if (obj.getforwardDisconnect() != null )
               setforwardDisconnect((Integer)Helper.copy(obj.getforwardDisconnect()));
           if (obj.getinputGain() != null )
               setinputGain((Integer)Helper.copy(obj.getinputGain()));
           if (obj.getisAutogenerated() != null )
               setisAutogenerated((Integer)Helper.copy(obj.getisAutogenerated()));
           if (obj.getmodemCodecByPass() != null )
               setmodemCodecByPass((Integer)Helper.copy(obj.getmodemCodecByPass()));
           if (obj.getoutputGain() != null )
               setoutputGain((Integer)Helper.copy(obj.getoutputGain()));
           if (obj.getrtpSignalling() != null )
               setrtpSignalling((Integer)Helper.copy(obj.getrtpSignalling()));
           if (obj.getservicePackage_POTSProfile() != null )
               setservicePackage_POTSProfile((String)Helper.copy(obj.getservicePackage_POTSProfile()));
           if (obj.getsignalType() != null )
               setsignalType((Integer)Helper.copy(obj.getsignalType()));
           if (obj.getsyncstatus() != null )
               setsyncstatus((String)Helper.copy(obj.getsyncstatus()));
           if (obj.getvoiceServiceType() != null )
               setvoiceServiceType((Integer)Helper.copy(obj.getvoiceServiceType()));
           if (obj.getIdentityValue() != null )
               setIdentityValue((com.calix.system.server.dbmodel.ICMSAid)Helper.copy(obj.getIdentityValue()));
        }
    } //-- void updateFields(CMSObject) 

//BEGIN CODE
    
    public void setreceiveLevel(Double RECEIVELevel)
    {
    	if(RECEIVELevel != null)
    		this.m_RECEIVELevel = String.valueOf(RECEIVELevel);
    	else
    		this.m_RECEIVELevel = null;
    } //-- void setRECEIVELevel(String) 

 
    public void settransmitLevel(Double TRANSMITLevel)
    {
        if(TRANSMITLevel != null)
        	this.m_TRANSMITLevel = String.valueOf(TRANSMITLevel);
        else
        	this.m_TRANSMITLevel = null;
    } //-- void setTRANSMITLevel(String) 
    
    public Double getreceiveLevel()
    {
    	if(this.m_RECEIVELevel != null)
    		return Double.valueOf(m_RECEIVELevel).doubleValue();
    	else
    		return null;
    } //-- void setRECEIVELevel(String)    
    
    public Double gettransmitLevel()
    {
    	if(this.m_TRANSMITLevel != null)
    		return Double.valueOf(m_TRANSMITLevel).doubleValue();
    	else
    		return null;
    } //-- void setTRANSMITLevel(String) 

    
	public void setconvertName(String convertName) {
		this.m_Name = new EMSAid(convertName);
	} // -- void setconvertName(String)

	public String getconvertName() {
		return this.m_Name.toString();
	}

	public Collection doQuery(DbTransaction tx, String filter)
			throws EMSException {
		if (Log.db().isDebugEnabled())
			Log.db().debug("Inside doQuery");
		ICMSQuery query = getDBQuery(this.getTypeName(), null);
		Collection coll = query.exec((Object) tx.getDatabase(), (Object) tx);
		if (Log.db().isDebugEnabled())
			Log.db().debug("Out of doQuery");
		return coll;
	}

	public CMSObject doLoad(DbTransaction tx) throws EMSException {
		C7Database db = C7Database.getInstance();
		CMSObject obj = null;
		try {
			db.beginTransaction();
			Collection resultList = db.executeQuery(this.getClass(), "name = '"
					+ this.getIdentityValue().toString() + "'", -1, -1);
			if (resultList != null && !resultList.isEmpty()) {
				Iterator itr = resultList.iterator();
				obj = (CMSObject) itr.next();
			}
			db.commitTransaction();
			} catch (Exception e) {
				e.printStackTrace();
				db.rollbackTransaction();
			}finally{
				db.close();
			}
		if (obj == null)
			throw new EMSDatabaseException(
					EMSDatabaseException._loadNonExistentFail_,
					"Object does not exist");
		else
			return obj;
	}

	public ICMSQuery getDBQuery(String type, String filter) {
		if (filter == null || filter.equals(""))
			return new EMSGetAllQuery(type);
		else {
			Log.meta().error("BaseEMSObject: filterQuery is not supported");
			return null;
		}
	}

	public boolean isIdentityValuePrimaryKey() {
		return true;
	}
	
//END CODE
}
